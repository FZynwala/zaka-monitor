{"version":3,"sources":["api/data.js","api/covid.js","api/covidPoland.js","actions/index.js","actions/types.js","components/Header.js","components/Card.js","components/CardExtended.js","components/CardTempOut.js","components/LoadingComponent.js","components/sensors-list/SensorsList.js","components/Modal.js","components/Settings.js","prepareData.js","components/chart.js","components/ChartModal.js","components/ShowChart.js","components/App.js","components/maintenance-page/MaintenancePage.js","reducers/index.js","reducers/fetchDayReducer.js","reducers/fetchCovidReducer.js","reducers/sensorNamesReducer.js","index.js"],"names":["axios","create","baseURL","fetchToday","dispatch","a","data","get","response","console","log","type","payload","fetchName","fetchCovid","covid","fetchCovidPoland","covidPoland","Header","onFetchClick","trackPromise","props","className","style","marginTop","onClick","this","class","React","Component","connect","state","names","renderMaxTemp","maxTemp","time","renderMinTemp","minTemp","temp","hum","name","id","to","history","push","Card","renderDoor","isOpen","renderIsLightOn","isLight","renderTempOutdoor","tempOut","dotColor","onSettingClick","LoadingComponent","width","height","display","justifyContent","alignItems","color","today","sensor01","sensor02","sensor03","promiseInProgress","usePromiseTracker","useEffect","renderData","tempA","length","tempB","tempC","maxTemp01","maxTemp02","maxTemp03","maxTempOut","minTemp01","minTemp02","minTemp03","minTempOut","renderNames","name1","name2","b","title","CardExtended","CardTempOut","Modal","onSubmit","formValues","postName","input","label","ReactDOM","createPortal","onDismiss","e","stopPropagation","handleSubmit","Field","component","renderInput","document","querySelector","reduxForm","form","post","Settings","Fragment","actions","renderActions","tSensor","ySensor","param","tTime","dataToChart","filter","obj","dataTemp","map","dataTime","Chart","labels","series","Chartist","Line","showArea","showPoint","onlyInteger","lineSmooth","Interpolation","monotoneCubic","fillHoles","axisX","labelInterpolationFnc","value","index","axisY","offset","ChartModal","yData","xData","ShowChart","prepareTempToChart","match","path","params","prepareData","yesterday","App","exact","SensorsList","MaintenancePage","Message","warning","size","icon","Icon","combineReducers","action","world","poland","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render","localStorage","getItem"],"mappings":"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","file":"static/js/main.aa0be189.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst herokuURL = 'https://desolate-tor-57356.herokuapp.com/';\r\nconst localhost = 'http://localhost:8000';\r\nconst renderUrl = 'https://zaka-monitor-api.onrender.com';\r\n\r\nexport default axios.create({\r\n    baseURL: renderUrl,\r\n});\r\n","import axios from 'axios';\r\n\r\nconst url = \"https://coronavirus-19-api.herokuapp.com/all\";\r\nconst general = \"https://corona-virus-stats.herokuapp.com/api/v1/cases/general-stats\";\r\n\r\nexport default axios.create({\r\n    baseURL: url\r\n});","import axios from 'axios';\r\n\r\nconst url = \"https://coronavirus-19-api.herokuapp.com/countries/poland\";\r\n\r\nexport default axios.create({\r\n    baseURL: url\r\n});","import data from '../api/data';\r\nimport covid from '../api/covid';\r\nimport { FETCH_TODAY, FETCH_NAME, POST_NAME, FETCH_COVID, FETCH_COVID_PL } from './types';\r\nimport covidPoland from '../api/covidPoland';\r\n\r\nexport const fetchToday = () => async dispatch => {\r\n    const response = await data.get('/');\r\n    console.log(response.data);\r\n    dispatch({ type: FETCH_TODAY, payload: response.data });\r\n};\r\n\r\nexport const fetchName = () => async dispatch => {\r\n    const response = await data.get('/sensor');\r\n    console.log(response);\r\n\r\n    dispatch({ type: FETCH_NAME, payload: response.data });\r\n};\r\n\r\nexport const postName = (formValues) => async dispatch => {\r\n    const response = await data.post('/sensor', formValues);\r\n    console.log(response);\r\n    \r\n    dispatch({ type: POST_NAME, payload: response.data });\r\n};\r\n\r\nexport const fetchCovid = () => async dispatch => {\r\n    const response = await covid.get('/');\r\n    console.log(response);\r\n\r\n    dispatch({ type: FETCH_COVID, payload: response.data });\r\n}\r\n\r\nexport const fetchCovidPoland = () => async dispatch => {\r\n    const response = await covidPoland.get('/');\r\n    console.log(response);\r\n\r\n    dispatch({ type: FETCH_COVID_PL, payload: response.data });\r\n}\r\n","export const FETCH_TODAY = 'FETCH_TODAY';\r\nexport const SENSOR_NAME = 'SENSOR_NAME';\r\nexport const FETCH_NAME = 'FETCH_NAME';\r\nexport const POST_NAME = 'POST_NAME';\r\nexport const FETCH_COVID = 'FETCH_COVID';\r\nexport const FETCH_COVID_PL = 'FETCH_COVID_PL';\r\n","import React from \"react\";\r\nimport { trackPromise } from \"react-promise-tracker\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCovid, fetchCovidPoland, fetchToday } from \"../actions\";\r\nimport \"./Header.css\";\r\n\r\nclass Header extends React.Component {\r\n    onFetchClick = () => {\r\n        trackPromise(this.props.fetchToday());\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <h2\r\n                    className=\"ui center aligned icon header font\"\r\n                    style={{ marginTop: \"5px\" }}\r\n                >\r\n                    <i className=\"chart line icon char-icon-color\"></i>\r\n                    ZAKA MONITOR\r\n                </h2>\r\n                <div className=\"button-margins\">\r\n                    <button\r\n                        onClick={this.onFetchClick}\r\n                        className=\"ui green button\"\r\n                    >\r\n                        <i class=\"sync icon large u-mr\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { fetchToday, fetchCovid, fetchCovidPoland })(\r\n    Header\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchName } from \"../actions\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n    const renderMaxTemp = () => {\r\n        if (props.maxTemp) {\r\n            var maxTemp = props.maxTemp.maxTemp;\r\n            var time = props.maxTemp.time;\r\n            return { maxTemp, time };\r\n        }\r\n\r\n        return \"Loading...\";\r\n    };\r\n\r\n    const renderMinTemp = () => {\r\n        if (props.minTemp) {\r\n            var minTemp = props.minTemp.minTemp;\r\n            var time = props.minTemp.time;\r\n            return { minTemp, time };\r\n        }\r\n\r\n        return \"Loding...\";\r\n    };\r\n\r\n    const dotColor = () => {\r\n        if (props.id === \"1\") {\r\n            return \"yellow\";\r\n        } else if (props.id === \"2\") {\r\n            return \"blue\";\r\n        }\r\n    };\r\n\r\n    const onSettingClick = () => {\r\n        props.history.push(\"/settings\");\r\n    };\r\n\r\n    if (props.data) {\r\n        var { temp, time, hum } = props.data;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card background-color\">\r\n                <div className=\"content\">\r\n                    <div className=\"right floated mini ui header\">\r\n                        <span className=\"temp-header\">\r\n                            {temp ? `${temp} \\u2103` : \"----\"}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"header\">{props.name}</div>\r\n                    <div className=\"meta\">ID czujnika: {props.id}</div>\r\n                    <div className=\"description\">\r\n                        Wilgotność: {hum ? `${hum}%` : \"-\"} <br />\r\n                        <span className=\"max-data\">\r\n                            Max: {`${renderMaxTemp().maxTemp} \\u2103`}\r\n                            <span className=\"time\">\r\n                                o godz: {`${renderMaxTemp().time}`}{\" \"}\r\n                            </span>\r\n                            <br />\r\n                        </span>\r\n                        <span className=\"min-data\">\r\n                            Min: {`${renderMinTemp().minTemp} \\u2103`}\r\n                            <span className=\"time\">\r\n                                o godz: {`${renderMinTemp().time}`}{\" \"}\r\n                            </span>\r\n                            <br />\r\n                        </span>\r\n                        Czas: {`${time}`} <br />\r\n                    </div>\r\n                    <div className=\"extra content\">\r\n                        <div className=\"right floated top-margin\">\r\n                            <Link\r\n                                to={`/chart/temp/${props.id}`}\r\n                                className=\"ui green button\"\r\n                            >\r\n                                Wykres\r\n                            </Link>\r\n                        </div>\r\n                        <div onClick={onSettingClick} className=\"left floated\">\r\n                            <div className={`dot-${dotColor()}`}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        names: state.names,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchName })(Card);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Card.css\";\r\n\r\nclass Card extends React.Component {\r\n    renderMaxTemp = () => {\r\n        if (this.props.maxTemp) {\r\n            var maxTemp = this.props.maxTemp.maxTemp;\r\n            var time = this.props.maxTemp.time;\r\n            return { maxTemp, time };\r\n        }\r\n\r\n        return \"Loading...\";\r\n    };\r\n\r\n    renderMinTemp = () => {\r\n        if (this.props.minTemp) {\r\n            var minTemp = this.props.minTemp.minTemp;\r\n            var time = this.props.minTemp.time;\r\n            return { minTemp, time };\r\n        }\r\n\r\n        return \"Loding...\";\r\n    };\r\n\r\n    renderDoor = () => {\r\n        if (this.props.data)\r\n            return this.props.data.isOpen ? \"otwarte\" : \"zamknięte\";\r\n    };\r\n\r\n    renderIsLightOn = () => {\r\n        if (this.props.data) {\r\n            return this.props.data.isLight ? \"ON\" : \"OFF\";\r\n        }\r\n    };\r\n\r\n    renderTempOutdoor = () => {\r\n        if (this.props.data) {\r\n            return this.props.data.tempOut;\r\n        }\r\n    };\r\n\r\n    dotColor = () => {\r\n        if (this.props.id === \"1\") {\r\n            return \"yellow\";\r\n        } else if (this.props.id === \"2\") {\r\n            return \"blue\";\r\n        } else if (this.props.id === \"3\") {\r\n            return \"black\";\r\n        }\r\n    };\r\n\r\n    onSettingClick = () => {\r\n        this.props.history.push(\"/settings\");\r\n    };\r\n\r\n    render() {\r\n        if (this.props.data) {\r\n            var { temp, time, hum } = this.props.data;\r\n        }\r\n\r\n        return (\r\n            <div className=\"card background-color\">\r\n                <div className=\"content\">\r\n                    <div className=\"right floated mini ui header\">\r\n                        <span className=\"temp-header\">{`${temp} \\u2103`}</span>\r\n                    </div>\r\n                    <div className=\"header\">Garaż</div>\r\n                    <div className=\"meta\">ID czujnika: {this.props.id}</div>\r\n                    <div className=\"description\">\r\n                        Wilgotność: {`${hum}%`} <br />\r\n                        <span className=\"max-data\">\r\n                            Max: {`${this.renderMaxTemp().maxTemp} \\u2103`}\r\n                            <span className=\"time\">\r\n                                o godz: {`${this.renderMaxTemp().time}`}{\" \"}\r\n                            </span>\r\n                            <br />\r\n                        </span>\r\n                        <span className=\"min-data\">\r\n                            Min: {`${this.renderMinTemp().minTemp} \\u2103`}\r\n                            <span className=\"time\">\r\n                                o godz: {`${this.renderMinTemp().time}`}{\" \"}\r\n                            </span>\r\n                            <br />\r\n                        </span>\r\n                        Drzwi: {this.renderDoor()} <br />\r\n                        Światło: {this.renderIsLightOn()} <br />\r\n                        Czas: {`${time}`} <br />\r\n                    </div>\r\n                    <div className=\"extra content\">\r\n                        <div className=\"right floated top-margin\">\r\n                            <Link\r\n                                to={`/chart/temp/${this.props.id}`}\r\n                                className=\"ui green button\"\r\n                            >\r\n                                Wykres\r\n                            </Link>\r\n                        </div>\r\n                        <div\r\n                            onClick={this.onSettingClick}\r\n                            className=\"left floated\"\r\n                        >\r\n                            <div className={`dot-${this.dotColor()}`}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        names: state.names,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Card);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Card.css\";\r\n\r\nclass Card extends React.Component {\r\n    renderMaxTemp = () => {\r\n        if (this.props.maxTemp) {\r\n            var maxTemp = this.props.maxTemp.maxTemp;\r\n            var time = this.props.maxTemp.time;\r\n            return { maxTemp, time };\r\n        }\r\n\r\n        return \"Loading...\";\r\n    };\r\n\r\n    renderMinTemp = () => {\r\n        if (this.props.minTemp) {\r\n            var minTemp = this.props.minTemp.minTemp;\r\n            var time = this.props.minTemp.time;\r\n            return { minTemp, time };\r\n        }\r\n\r\n        return \"Loding...\";\r\n    };\r\n\r\n    dotColor = () => {\r\n        if (this.props.id === \"1\") {\r\n            return \"yellow\";\r\n        } else if (this.props.id === \"2\") {\r\n            return \"blue\";\r\n        } else if (this.props.id === \"3\" || this.props.id === \"4\") {\r\n            return \"black\";\r\n        }\r\n    };\r\n\r\n    onSettingClick = () => {\r\n        this.props.history.push(\"/settings\");\r\n    };\r\n\r\n    render() {\r\n        if (this.props.data) {\r\n            var { tempOut, time } = this.props.data;\r\n        }\r\n\r\n        return (\r\n            <div className=\"card background-color\">\r\n                <div className=\"content\">\r\n                    <div className=\"right floated mini ui header\">\r\n                        <span className=\"temp-header\">{`${tempOut} \\u2103`}</span>\r\n                    </div>\r\n                    <div className=\"header\">Na zewnątrz:</div>\r\n                    <div className=\"meta\">ID czujnika: {this.props.id}</div>\r\n                    <div className=\"description\">\r\n                        <span className=\"max-data\">\r\n                            Max: {`${this.renderMaxTemp().maxTemp} \\u2103`}\r\n                            <span className=\"time\">\r\n                                o godz: {`${this.renderMaxTemp().time}`}{\" \"}\r\n                            </span>\r\n                            <br />\r\n                        </span>\r\n                        <span className=\"min-data\">\r\n                            Min: {`${this.renderMinTemp().minTemp} \\u2103`}\r\n                            <span className=\"time\">\r\n                                o godz: {`${this.renderMinTemp().time}`}{\" \"}\r\n                            </span>\r\n                            <br />\r\n                        </span>\r\n                        Czas: {`${time}`} <br />\r\n                    </div>\r\n                    <div className=\"extra content\">\r\n                        <div className=\"right floated top-margin\">\r\n                            <Link\r\n                                to={`/chart/temp/${this.props.id}`}\r\n                                className=\"ui green button\"\r\n                            >\r\n                                Wykres\r\n                            </Link>\r\n                        </div>\r\n                        <div\r\n                            onClick={this.onSettingClick}\r\n                            className=\"left floated\"\r\n                        >\r\n                            <div className={`dot-${this.dotColor()}`}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        names: state.names,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Card);\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport const LoadingComponent = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"100%\",\r\n                height: \"100\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"30%\",\r\n            }}\r\n        >\r\n            <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { trackPromise, usePromiseTracker } from \"react-promise-tracker\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    fetchCovid,\r\n    fetchCovidPoland,\r\n    fetchName,\r\n    fetchToday,\r\n} from \"../../actions\";\r\nimport Card from \"../Card\";\r\nimport CardExtended from \"../CardExtended\";\r\nimport CardTempOut from \"../CardTempOut\";\r\nimport { LoadingComponent } from \"../LoadingComponent\";\r\nimport \"./SensorList.css\";\r\n\r\nconst SensorsList = (props) => {\r\n    // componentDidMount() {\r\n    //     trackPromise(props.fetchToday());\r\n    //     props.fetchName();\r\n    //     //props.fetchCovid();\r\n    //     // props.fetchCovidPoland();\r\n    // }\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    useEffect(() => {\r\n        trackPromise(props.fetchToday());\r\n        props.fetchName();\r\n    }, []);\r\n\r\n    const renderData = () => {\r\n        if (props.maxTemp) {\r\n            const { sensor01, sensor02, sensor03 } = props;\r\n\r\n            const tempA = sensor01[sensor01.length - 1];\r\n            const tempB = sensor02[sensor02.length - 1];\r\n            const tempC = sensor03[sensor03.length - 1];\r\n            const maxTemp01 = props.maxTemp.sensor01;\r\n            const maxTemp02 = props.maxTemp.sensor02;\r\n            const maxTemp03 = props.maxTemp.sensor03;\r\n            const maxTempOut = props.maxTemp.tempOut;\r\n            const minTemp01 = props.minTemp.sensor01;\r\n            const minTemp02 = props.minTemp.sensor02;\r\n            const minTemp03 = props.minTemp.sensor03;\r\n            const minTempOut = props.minTemp.tempOut;\r\n\r\n            return {\r\n                tempA,\r\n                tempB,\r\n                tempC,\r\n                maxTemp01,\r\n                maxTemp02,\r\n                maxTemp03,\r\n                maxTempOut,\r\n                minTemp01,\r\n                minTemp02,\r\n                minTemp03,\r\n                minTempOut,\r\n            };\r\n        }\r\n        return \"Loading\";\r\n    };\r\n    /*\r\n    renderSensor = () => {\r\n        props.sensor01.map(data => {\r\n            return (\r\n                <Sensor data={renderData()} />\r\n            );\r\n        });\r\n    };*/\r\n\r\n    const renderNames = () => {\r\n        if (props.names.a) {\r\n            const name1 = props.names.a.name;\r\n            const name2 = props.names.b.name;\r\n\r\n            return { name1, name2 };\r\n        } else {\r\n            return \"Loading...\";\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {promiseInProgress ? (\r\n                <LoadingComponent />\r\n            ) : (\r\n                <div className=\"ui cards\">\r\n                    <Card\r\n                        data={renderData().tempA}\r\n                        maxTemp={renderData().maxTemp01}\r\n                        minTemp={renderData().minTemp01}\r\n                        title=\"Sensor A\"\r\n                        id=\"1\"\r\n                        history={props.history}\r\n                        name={renderNames().name1}\r\n                    />\r\n                    <Card\r\n                        data={renderData().tempB}\r\n                        maxTemp={renderData().maxTemp02}\r\n                        minTemp={renderData().minTemp02}\r\n                        title=\"Sensor B\"\r\n                        id=\"2\"\r\n                        history={props.history}\r\n                        name={renderNames().name2}\r\n                    />\r\n                    <CardExtended\r\n                        data={renderData().tempC}\r\n                        maxTemp={renderData().maxTemp03}\r\n                        minTemp={renderData().minTemp03}\r\n                        title=\"Sensor C\"\r\n                        id=\"3\"\r\n                        history={props.history}\r\n                        name=\"Garaz\"\r\n                    />\r\n                    <CardTempOut\r\n                        data={renderData().tempC}\r\n                        maxTemp={renderData().maxTempOut}\r\n                        minTemp={renderData().minTempOut}\r\n                        id=\"4\"\r\n                        history={props.history}\r\n                    />\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    if (state.data.today) {\r\n        return {\r\n            sensor01: state.data.today.sensor01,\r\n            sensor02: state.data.today.sensor02,\r\n            sensor03: state.data.today.sensor03,\r\n            maxTemp: state.data.today.maxTemp,\r\n            minTemp: state.data.today.minTemp,\r\n            names: state.names,\r\n        };\r\n    } else {\r\n        return {\r\n            names: state.names,\r\n        };\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchToday,\r\n    fetchName,\r\n    fetchCovid,\r\n    fetchCovidPoland,\r\n})(SensorsList);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { postName } from '../actions';\r\n\r\nclass Modal extends React.Component {\r\n    renderInput({ input, label }) {\r\n        return (\r\n            <div className=\"field\">\r\n                <label>{label}</label>\r\n                <input {...input} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = async (formValues) => {\r\n        console.log(formValues);\r\n        await this.props.postName(formValues);\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n   \r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <div onClick={this.props.onDismiss} className=\"ui dimmer modals visible active\">\r\n                <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n                    <div className=\"header\">Zmień nazwę czujnika</div>\r\n                    <div className=\"content\">\r\n                        <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\r\n                            <Field name=\"name1\" component={this.renderInput} label=\"Nazwa czujnika 1:\" />\r\n                            <Field name=\"name2\" component={this.renderInput} label=\"Nazwa czujnika 2:\" />\r\n                            <div className=\"actions\">\r\n                                <button className=\"ui black button\">Zapisz</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>,\r\n            document.querySelector('#modal')\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'sensorsNames'\r\n})(connect(null, { postName })(Modal));\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Modal from './Modal';\r\n\r\n\r\nclass Settings extends React.Component {\r\n    renderActions() {\r\n        return (\r\n            <React.Fragment>\r\n\t\t\t    <Link to={`/`} onClick={this.props.onSubmit} className=\"ui black button\">Zapisz</Link>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                actions={this.renderActions()}\r\n                onDismiss={() => this.props.history.push(\"/\")}\r\n                history={this.props.history}\r\n            />\r\n        );\r\n    };\r\n}\r\n\r\nexport default Settings;\r\n","export default (tSensor, ySensor, param) => {\r\n    \r\n    if(tSensor) {\r\n        const current = tSensor[tSensor.length - 1];\r\n        const tTime = current.time;\r\n        \r\n        let dataToChart = ySensor.filter(obj => obj.time > tTime);\r\n        dataToChart = [ ...dataToChart, ...tSensor ];\r\n\r\n        const dataTemp = dataToChart.map(obj => obj[param]);\r\n        const dataTime = dataToChart.map(obj => obj.time);\r\n\r\n        \r\n        return { dataTemp, dataTime }\r\n    }\r\n};","import './chart.css';\r\nimport React from 'react';\r\nimport Chartist from 'chartist';\r\n\r\nclass Chart extends React.Component {\r\n    componentDidMount() {\r\n      \r\n        var data = {\r\n            // A labels array that can contain any sort of values\r\n            labels: this.props.time,\r\n            // Our series array that contains series objects or in this case series data arrays\r\n            series: [this.props.temp]\r\n          };\r\n\r\n\r\n          new Chartist.Line('.ct-chart', data, {\r\n            //low: 17,\r\n            showArea: false,\r\n            showPoint: false,\r\n            onlyInteger: false,\r\n            lineSmooth: Chartist.Interpolation.monotoneCubic({\r\n              fillHoles: false\r\n            }),\r\n            axisX: {\r\n              labelInterpolationFnc: function(value, index) {\r\n                return index % 10 === 0 ? value : null;\r\n              }\r\n            },\r\n            axisY: {\r\n              offset: 25\r\n            }\r\n          }, [\r\n            ['screen and (max-width: 300px)', {\r\n              axisX: {\r\n                labelInterpolationFnc: function(value, index) {\r\n                  return index % 30 === 0 ? value : null;\r\n                }\r\n              }\r\n            }],\r\n            ['screen and (min-width: 300px)', {\r\n              axisX: {\r\n                labelInterpolationFnc: function(value, index) {\r\n                  return index % 15 === 0 ? value : null;\r\n                }\r\n              }\r\n            }],\r\n            ['screen and (min-width: 600px)', {\r\n              axisX: {\r\n                labelInterpolationFnc: function(value, index) {\r\n                  return index % 10 === 0 ? value : null;\r\n                }\r\n              }\r\n            }]\r\n          ]);\r\n    };\r\n\r\n    componentDidUpdate() {\r\n      var data = {\r\n        labels: this.props.time,\r\n        series: [this.props.temp]\r\n      };\r\n\r\n\r\n      new Chartist.Line('.ct-chart', data, {\r\n        //low: 17,\r\n        showArea: false,\r\n        showPoint: false,\r\n        onlyInteger: false,\r\n        lineSmooth: Chartist.Interpolation.monotoneCubic({\r\n          fillHoles: false\r\n        }),\r\n        axisX: {\r\n          labelInterpolationFnc: function(value, index) {\r\n            return index % 10 === 0 ? value : null;\r\n          }\r\n        },\r\n        axisY: {\r\n          offset: 25\r\n        }\r\n      }, [\r\n        ['screen and (max-width: 300px)', {\r\n          axisX: {\r\n            labelInterpolationFnc: function(value, index) {\r\n              return index % 30 === 0 ? value : null;\r\n            }\r\n          }\r\n        }],\r\n        ['screen and (min-width: 300px)', {\r\n          axisX: {\r\n            labelInterpolationFnc: function(value, index) {\r\n              return index % 15 === 0 ? value : null;\r\n            }\r\n          }\r\n        }],\r\n        ['screen and (min-width: 600px)', {\r\n          axisX: {\r\n            labelInterpolationFnc: function(value, index) {\r\n              return index % 10 === 0 ? value : null;\r\n            }\r\n          }\r\n        }]\r\n      ]);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"chart1\" className=\"ct-chart .ct-golden-section \">\r\n\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Chart;\r\n","import './ChartModal.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Chart from './chart';\r\n\r\nconst ChartModal = props => {\r\n    const tempTitle = 'Temperatura w \\u2103';\r\n    const humTitle = 'Wilgotność w %';\r\n    console.log(props);\r\n\r\n    return ReactDOM.createPortal(\r\n        <div onClick={props.onDismiss} className=\"ui dimmer modals visible active\">\r\n            <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n                <div className=\"header\">Wykres - ostatnie 24h</div>\r\n                <div className=\"content\">\r\n                    <div className=\"chart-title\">\r\n                        <h4>{props.type === 'temp' ? tempTitle : humTitle}</h4>\r\n                    </div>\r\n                    <Chart temp={props.yData} time={props.xData} />\r\n                </div>\r\n                <div className=\"actions\">\r\n                    {props.actions}\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n    );\r\n};\r\n\r\nexport default ChartModal;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fetchToday } from \"../actions\";\r\nimport prepareData from \"../prepareData\";\r\nimport ChartModal from \"./ChartModal\";\r\nimport \"./ShowChart.css\";\r\n\r\nclass ShowChart extends React.Component {\r\n    prepareTempToChart = () => {\r\n        if (this.props.today) {\r\n            if (this.props.match.path === \"/chart/temp/:id\") {\r\n                if (this.props.match.params.id === \"1\") {\r\n                    console.log(\"Hello from preapareTemp\");\r\n\r\n                    return prepareData(\r\n                        this.props.today.sensor01,\r\n                        this.props.yesterday.sensor01,\r\n                        \"temp\"\r\n                    );\r\n                } else if (this.props.match.params.id === \"2\") {\r\n                    return prepareData(\r\n                        this.props.today.sensor02,\r\n                        this.props.yesterday.sensor02,\r\n                        \"temp\"\r\n                    );\r\n                } else if (this.props.match.params.id === \"3\") {\r\n                    return prepareData(\r\n                        this.props.today.sensor03,\r\n                        this.props.yesterday.sensor03,\r\n                        \"temp\"\r\n                    );\r\n                } else if (this.props.match.params.id === \"4\") {\r\n                    return prepareData(\r\n                        this.props.today.sensor03,\r\n                        this.props.yesterday.sensor03,\r\n                        \"tempOut\"\r\n                    );\r\n                }\r\n            } else if (this.props.match.path === \"/chart/hum/:id\") {\r\n                if (this.props.match.params.id === \"1\") {\r\n                    console.log(\"Hello from preapareHum\");\r\n\r\n                    return prepareData(\r\n                        this.props.today.sensor01,\r\n                        this.props.yesterday.sensor01,\r\n                        \"hum\"\r\n                    );\r\n                } else if (this.props.match.params.id === \"2\") {\r\n                    return prepareData(\r\n                        this.props.today.sensor02,\r\n                        this.props.yesterday.sensor02,\r\n                        \"hum\"\r\n                    );\r\n                } else if (this.props.match.params.id === \"3\") {\r\n                    return prepareData(\r\n                        this.props.today.sensor03,\r\n                        this.props.yesterday.sensor03,\r\n                        \"hum\"\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    renderActions() {\r\n        if (this.props.match.params.id === \"4\") {\r\n            return (\r\n                <React.Fragment>\r\n                    <Link to=\"/\" className=\"ui green button\">\r\n                        Wróć\r\n                    </Link>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Link\r\n                    to={`/chart/temp/${this.props.match.params.id}`}\r\n                    className=\"ui green button\"\r\n                >\r\n                    Temperatura\r\n                </Link>\r\n                <Link\r\n                    to={`/chart/hum/${this.props.match.params.id}`}\r\n                    className=\"ui green button\"\r\n                >\r\n                    Wilgotność\r\n                </Link>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.props.today) {\r\n            return (\r\n                <ChartModal\r\n                    xData={this.prepareTempToChart().dataTime}\r\n                    yData={this.prepareTempToChart().dataTemp}\r\n                    type={\r\n                        this.props.match.path === \"/chart/temp/:id\"\r\n                            ? \"temp\"\r\n                            : \"hum\"\r\n                    }\r\n                    actions={this.renderActions()}\r\n                    onDismiss={() => this.props.history.push(\"/\")}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <ChartModal\r\n                    xData={null}\r\n                    yData={null}\r\n                    type={\r\n                        this.props.match.path === \"/chart/temp/:id\"\r\n                            ? \"temp\"\r\n                            : \"hum\"\r\n                    }\r\n                    actions={this.renderActions()}\r\n                    onDismiss={() => this.props.history.push(\"/\")}\r\n                />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        today: state.data.today,\r\n        yesterday: state.data.yesterday,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchToday })(ShowChart);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport { fetchToday } from \"../actions\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport SensorsList from \"./sensors-list/SensorsList\";\r\nimport Settings from \"./Settings\";\r\nimport ShowChart from \"./ShowChart\";\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchToday();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <HashRouter>\r\n                    <Route path=\"/\" exact component={SensorsList} />\r\n                    <Route path=\"/chart/temp/:id\" exact component={ShowChart} />\r\n                    <Route path=\"/chart/hum/:id\" exact component={ShowChart} />\r\n                    <Route path=\"/settings\" exact component={Settings} />\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sensor01: state.data.sensor01,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchToday })(App);\r\n","import React from 'react';\r\nimport { Icon, Message } from 'semantic-ui-react';\r\nimport './MaintenancePage.css';\r\n\r\nconst MaintenancePage = () => {\r\n    return (\r\n        <Message warning size=\"large\" className=\"message\" color=\"red\" icon={<Icon name=\"wrench\" />}>\r\n            <Icon name=\"wrench\" />\r\n            <Message.Header>Przerwa techniczna</Message.Header>\r\n        </Message>\r\n    );\r\n};\r\n\r\nexport default MaintenancePage;\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport fetchDayReducer from './fetchDayReducer';\r\nimport sensorNamesReducer from './sensorNamesReducer';\r\nimport fetchCovidReducer from './fetchCovidReducer';\r\n\r\nexport default combineReducers({\r\n    data: fetchDayReducer,\r\n    covid: fetchCovidReducer,\r\n    form: formReducer,\r\n    names: sensorNamesReducer\r\n});","import { FETCH_TODAY } from '../actions/types';\r\n\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_TODAY:\r\n            return { ...state,  ...action.payload }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n","import { FETCH_COVID, FETCH_COVID_PL } from '../actions/types';\r\n\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_COVID:\r\n            return { ...state,  world: action.payload };\r\n        case FETCH_COVID_PL:\r\n            return { ...state, poland: action.payload };\r\n        default:\r\n            return state;\r\n    };\r\n};","import { FETCH_NAME, POST_NAME } from '../actions/types';\r\n\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_NAME:\r\n            return { ...state,  ...action.payload };\r\n        case POST_NAME:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    };\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport App from './components/App';\r\nimport MaintenancePage from './components/maintenance-page/MaintenancePage';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>{localStorage.getItem('admin') ? <App /> : <MaintenancePage />}</Provider>,\r\n    document.querySelector('#root'),\r\n);\r\n"],"sourceRoot":""}