{"version":3,"sources":["api/data.js","api/covid.js","api/covidPoland.js","actions/index.js","actions/types.js","components/Header.js","utils/index.js","components/Card.js","components/CardExtended.js","components/CardTempOut.js","components/LoadingComponent.js","components/sensors-list/SensorsList.js","components/Modal.js","components/Settings.js","prepareData.js","components/chart.js","components/rechart/Rechart.js","components/ChartModal.js","components/ShowChart.js","components/App.js","reducers/index.js","reducers/fetchDayReducer.js","reducers/fetchCovidReducer.js","reducers/sensorNamesReducer.js","index.js"],"names":["axios","create","baseURL","fetchToday","dispatch","a","data","get","response","console","log","type","payload","fetchName","fetchCovid","covid","fetchCovidPoland","covidPoland","Header","onFetchClick","trackPromise","props","className","style","marginTop","src","width","height","onClick","this","React","Component","connect","formatTime","time","moment","format","state","names","maxTemp","minTemp","id","title","history","name","renderMaxTemp","temp","renderMinTemp","hum","to","push","Card","renderDoor","isOpen","renderIsLightOn","isLight","renderTempOutdoor","tempOut","dotColor","onSettingClick","LoadingComponent","display","justifyContent","alignItems","color","today","sensor01","sensor02","sensor03","sensor04","promiseInProgress","usePromiseTracker","useEffect","length","b","CardExtended","CardTempOut","c","Modal","onSubmit","formValues","body","name1","name2","name3","postName","input","label","ReactDOM","createPortal","onDismiss","e","stopPropagation","handleSubmit","Field","component","renderInput","document","querySelector","reduxForm","form","post","Settings","Fragment","actions","renderActions","tSensor","ySensor","param","mappedTSensor","map","obj","mappedYSensor","tTime","dataToChart","filter","dataTemp","dataTime","Chart","labels","series","Chartist","Line","showArea","showPoint","onlyInteger","lineSmooth","Interpolation","monotoneCubic","fillHoles","axisX","labelInterpolationFnc","value","index","axisY","offset","Rechart","xBegin","subtract","toDate","getTime","ResponsiveContainer","viewBox","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","tickFormatter","unixTime","angle","textAnchor","allowDataOverflow","Tooltip","labelFormatter","labelStyle","stroke","dot","strokeWidth","animationEasing","YAxis","ChartModal","xData","yData","isNewChart","ShowChart","dateWithMixedTimeType","date","isAfter","prepareTempToChart","match","path","params","prepareData","yesterday","getChartType","getSensorName","prepareChartData","undefined","App","exact","SensorsList","combineReducers","action","world","poland","formReducer","dotenv","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.887a4ba6.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst herokuURL = 'https://desolate-tor-57356.herokuapp.com/';\r\nconst localhost = 'http://localhost:8000';\r\nconst renderUrl = 'https://dev-zaka-monitor-api.onrender.com';\r\n\r\nexport default axios.create({\r\n    baseURL: renderUrl,\r\n});\r\n","import axios from 'axios';\r\n\r\nconst url = \"https://coronavirus-19-api.herokuapp.com/all\";\r\nconst general = \"https://corona-virus-stats.herokuapp.com/api/v1/cases/general-stats\";\r\n\r\nexport default axios.create({\r\n    baseURL: url\r\n});","import axios from 'axios';\r\n\r\nconst url = \"https://coronavirus-19-api.herokuapp.com/countries/poland\";\r\n\r\nexport default axios.create({\r\n    baseURL: url\r\n});","import data from '../api/data';\r\nimport covid from '../api/covid';\r\nimport { FETCH_TODAY, FETCH_NAME, POST_NAME, FETCH_COVID, FETCH_COVID_PL } from './types';\r\nimport covidPoland from '../api/covidPoland';\r\n\r\nexport const fetchToday = () => async dispatch => {\r\n    const response = await data.get('/');\r\n    console.log(response.data);\r\n    dispatch({ type: FETCH_TODAY, payload: response.data });\r\n};\r\n\r\nexport const fetchName = () => async dispatch => {\r\n    const response = await data.get('/sensor');\r\n    console.log(response);\r\n\r\n    dispatch({ type: FETCH_NAME, payload: response.data });\r\n};\r\n\r\nexport const postName = (formValues) => async dispatch => {\r\n    const response = await data.post('/sensor', formValues);\r\n    console.log(response);\r\n    \r\n    dispatch({ type: POST_NAME, payload: response.data });\r\n};\r\n\r\nexport const fetchCovid = () => async dispatch => {\r\n    const response = await covid.get('/');\r\n    console.log(response);\r\n\r\n    dispatch({ type: FETCH_COVID, payload: response.data });\r\n}\r\n\r\nexport const fetchCovidPoland = () => async dispatch => {\r\n    const response = await covidPoland.get('/');\r\n    console.log(response);\r\n\r\n    dispatch({ type: FETCH_COVID_PL, payload: response.data });\r\n}\r\n","export const FETCH_TODAY = 'FETCH_TODAY';\r\nexport const SENSOR_NAME = 'SENSOR_NAME';\r\nexport const FETCH_NAME = 'FETCH_NAME';\r\nexport const POST_NAME = 'POST_NAME';\r\nexport const FETCH_COVID = 'FETCH_COVID';\r\nexport const FETCH_COVID_PL = 'FETCH_COVID_PL';\r\n","import React from 'react';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCovid, fetchCovidPoland, fetchToday } from '../actions';\r\nimport './Header.css';\r\n\r\nclass Header extends React.Component {\r\n    onFetchClick = () => {\r\n        trackPromise(this.props.fetchToday());\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"\">\r\n                <h2 className=\"ui center aligned header font\" style={{ marginTop: '5px' }}>\r\n                    <div className=\"image-header\">\r\n                        <img src=\"./zaka-monitor-logo.png\" width={150} height={91} />\r\n                    </div>\r\n                    ZAKA MONITOR\r\n                </h2>\r\n                <div className=\"button-margins\">\r\n                    <button onClick={this.onFetchClick} className=\"ui green button\">\r\n                        <i className=\"sync icon large u-mr\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { fetchToday, fetchCovid, fetchCovidPoland })(Header);\r\n","import moment from 'moment';\r\n\r\nexport const formatTime = (time) => moment(time).format('HH:MM');\r\n","import moment from 'moment';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchName } from '../actions';\r\nimport { formatTime } from '../utils';\r\nimport './Card.css';\r\n\r\nconst Card = ({ data, maxTemp, minTemp, title, id, history, name }) => {\r\n    const renderMaxTemp = (temp) => {\r\n        if (temp) {\r\n            const maxTemp = temp.maxTemp;\r\n            const time = moment(temp.time).format('HH:MM');\r\n            return { maxTemp, time };\r\n        }\r\n\r\n        return 'Loading...';\r\n    };\r\n\r\n    const renderMinTemp = (temp) => {\r\n        if (temp) {\r\n            const minTemp = temp.minTemp;\r\n            const time = moment(temp.time).format('HH:MM');\r\n            return { minTemp, time };\r\n        }\r\n\r\n        return 'Loding...';\r\n    };\r\n\r\n    const dotColor = () => {\r\n        if (id === '1') {\r\n            return 'yellow';\r\n        } else if (id === '2') {\r\n            return 'blue';\r\n        } else if (id === '5') {\r\n            return 'purple';\r\n        }\r\n    };\r\n\r\n    const onSettingClick = () => {\r\n        history.push('/settings');\r\n    };\r\n\r\n    if (data) {\r\n        var { temp, time, hum } = data;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card background-color\">\r\n                <div className=\"content\">\r\n                    <div className=\"right floated mini ui header\">\r\n                        <span className=\"temp-header\">{temp ? `${temp} \\u2103` : '----'}</span>\r\n                    </div>\r\n                    <div className=\"header\">{name}</div>\r\n                    <div className=\"meta\">ID czujnika: {id}</div>\r\n                    <div className=\"description\">\r\n                        Wilgotność: {hum ? `${hum}%` : '--'} <br />\r\n                        <span className=\"max-data\">\r\n                            Max: {renderMaxTemp(maxTemp).maxTemp ? `${renderMaxTemp(maxTemp).maxTemp} \\u2103` : '--'}\r\n                            <span className=\"time\">\r\n                                o godz: {renderMaxTemp(maxTemp).time ? `${renderMaxTemp(maxTemp).time}` : '--:--'}{' '}\r\n                            </span>\r\n                            <br />\r\n                        </span>\r\n                        <span className=\"min-data\">\r\n                            Min: {renderMinTemp(minTemp).minTemp ? `${renderMinTemp(minTemp).minTemp} \\u2103` : '--'}\r\n                            <span className=\"time\">\r\n                                o godz: {renderMinTemp(minTemp).time ? `${renderMinTemp(minTemp).time}` : '--:--'}{' '}\r\n                            </span>\r\n                            <br />\r\n                        </span>\r\n                        Czas: {`${formatTime(time)}`} <br />\r\n                    </div>\r\n                    <div className=\"extra content\">\r\n                        <div className=\"right floated top-margin\">\r\n                            <Link to={`/chart/temp/${id}`} className=\"ui green button\">\r\n                                Wykres\r\n                            </Link>\r\n                        </div>\r\n                        <div onClick={onSettingClick} className=\"left floated\">\r\n                            <div className={`dot-${dotColor()}`}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        names: state.names,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchName })(Card);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { formatTime } from '../utils';\r\nimport './Card.css';\r\n\r\nclass Card extends React.Component {\r\n    renderMaxTemp = () => {\r\n        if (this.props.maxTemp) {\r\n            var maxTemp = this.props.maxTemp.maxTemp;\r\n            var time = formatTime(this.props.maxTemp.time);\r\n            return { maxTemp, time };\r\n        }\r\n\r\n        return 'Loading...';\r\n    };\r\n\r\n    renderMinTemp = () => {\r\n        if (this.props.minTemp) {\r\n            var minTemp = this.props.minTemp.minTemp;\r\n            var time = formatTime(this.props.minTemp.time);\r\n            return { minTemp, time };\r\n        }\r\n\r\n        return 'Loding...';\r\n    };\r\n\r\n    renderDoor = () => {\r\n        if (this.props.data) return this.props.data.isOpen ? 'otwarte' : 'zamknięte';\r\n    };\r\n\r\n    renderIsLightOn = () => {\r\n        if (this.props.data) {\r\n            return this.props.data.isLight ? 'ON' : 'OFF';\r\n        }\r\n    };\r\n\r\n    renderTempOutdoor = () => {\r\n        if (this.props.data) {\r\n            return this.props.data.tempOut;\r\n        }\r\n    };\r\n\r\n    dotColor = () => {\r\n        if (this.props.id === '1') {\r\n            return 'yellow';\r\n        } else if (this.props.id === '2') {\r\n            return 'blue';\r\n        } else if (this.props.id === '3') {\r\n            return 'black';\r\n        }\r\n    };\r\n\r\n    onSettingClick = () => {\r\n        this.props.history.push('/settings');\r\n    };\r\n\r\n    render() {\r\n        if (this.props.data) {\r\n            var { temp, time, hum } = this.props.data;\r\n        }\r\n\r\n        return (\r\n            <div className=\"card background-color\">\r\n                <div className=\"content\">\r\n                    <div className=\"right floated mini ui header\">\r\n                        <span className=\"temp-header\">{`${temp} \\u2103`}</span>\r\n                    </div>\r\n                    <div className=\"header\">Garaż</div>\r\n                    <div className=\"meta\">ID czujnika: {this.props.id}</div>\r\n                    <div className=\"description\">\r\n                        Wilgotność: {`${hum}%`} <br />\r\n                        <span className=\"max-data\">\r\n                            Max: {`${this.renderMaxTemp().maxTemp} \\u2103`}\r\n                            <span className=\"time\">o godz: {`${this.renderMaxTemp().time}`} </span>\r\n                            <br />\r\n                        </span>\r\n                        <span className=\"min-data\">\r\n                            Min: {`${this.renderMinTemp().minTemp} \\u2103`}\r\n                            <span className=\"time\">o godz: {`${this.renderMinTemp().time}`} </span>\r\n                            <br />\r\n                        </span>\r\n                        Drzwi: {this.renderDoor()} <br />\r\n                        Światło: {this.renderIsLightOn()} <br />\r\n                        Czas: {`${formatTime(time)}`} <br />\r\n                    </div>\r\n                    <div className=\"extra content\">\r\n                        <div className=\"right floated top-margin\">\r\n                            <Link to={`/chart/temp/${this.props.id}`} className=\"ui green button\">\r\n                                Wykres\r\n                            </Link>\r\n                        </div>\r\n                        <div onClick={this.onSettingClick} className=\"left floated\">\r\n                            <div className={`dot-${this.dotColor()}`}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        names: state.names,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Card);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { formatTime } from '../utils';\r\nimport './Card.css';\r\n\r\nclass Card extends React.Component {\r\n    renderMaxTemp = () => {\r\n        if (this.props.maxTemp) {\r\n            var maxTemp = this.props.maxTemp.maxTemp;\r\n            var time = formatTime(this.props.maxTemp.time);\r\n            return { maxTemp, time };\r\n        }\r\n\r\n        return 'Loading...';\r\n    };\r\n\r\n    renderMinTemp = () => {\r\n        if (this.props.minTemp) {\r\n            var minTemp = this.props.minTemp.minTemp;\r\n            var time = formatTime(this.props.minTemp.time);\r\n            return { minTemp, time };\r\n        }\r\n\r\n        return 'Loding...';\r\n    };\r\n\r\n    dotColor = () => {\r\n        if (this.props.id === '1') {\r\n            return 'yellow';\r\n        } else if (this.props.id === '2') {\r\n            return 'blue';\r\n        } else if (this.props.id === '3' || this.props.id === '4') {\r\n            return 'black';\r\n        }\r\n    };\r\n\r\n    onSettingClick = () => {\r\n        this.props.history.push('/settings');\r\n    };\r\n\r\n    render() {\r\n        if (this.props.data) {\r\n            var { tempOut, time } = this.props.data;\r\n        }\r\n\r\n        return (\r\n            <div className=\"card background-color\">\r\n                <div className=\"content\">\r\n                    <div className=\"right floated mini ui header\">\r\n                        <span className=\"temp-header\">{`${tempOut} \\u2103`}</span>\r\n                    </div>\r\n                    <div className=\"header\">Na zewnątrz:</div>\r\n                    <div className=\"meta\">ID czujnika: {this.props.id}</div>\r\n                    <div className=\"description\">\r\n                        <span className=\"max-data\">\r\n                            Max: {this.renderMaxTemp().maxTemp ? `${this.renderMaxTemp().maxTemp} \\u2103` : '--'}\r\n                            <span className=\"time\">o godz: {`${this.renderMaxTemp().time}`} </span>\r\n                            <br />\r\n                        </span>\r\n                        <span className=\"min-data\">\r\n                            Min: {this.renderMinTemp().minTemp ? `${this.renderMinTemp().minTemp} \\u2103` : '--'}\r\n                            <span className=\"time\">\r\n                                o godz: {this.renderMinTemp().time ? `${this.renderMinTemp().time}` : '--:--'}{' '}\r\n                            </span>\r\n                            <br />\r\n                        </span>\r\n                        Czas: {`${formatTime(time)}`} <br />\r\n                    </div>\r\n                    <div className=\"extra content\">\r\n                        <div className=\"right floated top-margin\">\r\n                            <Link to={`/chart/temp/${this.props.id}`} className=\"ui green button\">\r\n                                Wykres\r\n                            </Link>\r\n                        </div>\r\n                        <div onClick={this.onSettingClick} className=\"left floated\">\r\n                            <div className={`dot-${this.dotColor()}`}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        names: state.names,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Card);\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport const LoadingComponent = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"100%\",\r\n                height: \"100\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"30%\",\r\n            }}\r\n        >\r\n            <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\r\n        </div>\r\n    );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCovid, fetchCovidPoland, fetchName, fetchToday } from '../../actions';\r\nimport Card from '../Card';\r\nimport CardExtended from '../CardExtended';\r\nimport CardTempOut from '../CardTempOut';\r\nimport { LoadingComponent } from '../LoadingComponent';\r\nimport './SensorList.css';\r\n\r\nconst SensorsList = ({\r\n    sensor01,\r\n    sensor02,\r\n    sensor03,\r\n    sensor04,\r\n    fetchToday,\r\n    fetchName,\r\n    maxTemp,\r\n    minTemp,\r\n    names,\r\n    history,\r\n}) => {\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    useEffect(() => {\r\n        trackPromise(fetchToday());\r\n        fetchName();\r\n    }, []);\r\n\r\n    if (!maxTemp || !names.a) return null;\r\n\r\n    return (\r\n        <>\r\n            {promiseInProgress ? (\r\n                <LoadingComponent />\r\n            ) : (\r\n                <div className=\"ui cards\">\r\n                    <Card\r\n                        data={sensor01[sensor01.length - 1]}\r\n                        maxTemp={maxTemp.sensor01}\r\n                        minTemp={minTemp.sensor01}\r\n                        title=\"Sensor A\"\r\n                        id=\"1\"\r\n                        history={history}\r\n                        name={names.a.name}\r\n                    />\r\n                    <Card\r\n                        data={sensor02[sensor02.length - 1]}\r\n                        maxTemp={maxTemp.sensor02}\r\n                        minTemp={minTemp.sensor02}\r\n                        title=\"Sensor B\"\r\n                        id=\"2\"\r\n                        history={history}\r\n                        name={names.b.name}\r\n                    />\r\n                    <CardExtended\r\n                        data={sensor03[sensor03.length - 1]}\r\n                        maxTemp={maxTemp.sensor03}\r\n                        minTemp={minTemp.sensor03}\r\n                        title=\"Sensor C\"\r\n                        id=\"3\"\r\n                        history={history}\r\n                        name=\"Garaz\"\r\n                    />\r\n                    <CardTempOut\r\n                        data={sensor03[sensor03.length - 1]}\r\n                        maxTemp={maxTemp.tempOut}\r\n                        minTemp={minTemp.tempOut}\r\n                        id=\"4\"\r\n                        history={history}\r\n                    />\r\n                    <Card\r\n                        data={sensor04[sensor04.length - 1]}\r\n                        maxTemp={maxTemp.sensor04}\r\n                        minTemp={minTemp.sensor04}\r\n                        title=\"Sensor B\"\r\n                        id=\"5\"\r\n                        history={history}\r\n                        name={names.c.name}\r\n                    />\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    if (state.data.today) {\r\n        return {\r\n            sensor01: state.data.today.sensor01,\r\n            sensor02: state.data.today.sensor02,\r\n            sensor03: state.data.today.sensor03,\r\n            sensor04: state.data.today.sensor04,\r\n            maxTemp: state.data.today.maxTemp,\r\n            minTemp: state.data.today.minTemp,\r\n            names: state.names,\r\n        };\r\n    } else {\r\n        return {\r\n            names: state.names,\r\n        };\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchToday,\r\n    fetchName,\r\n    fetchCovid,\r\n    fetchCovidPoland,\r\n})(SensorsList);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { postName } from '../actions';\r\n\r\nclass Modal extends React.Component {\r\n    renderInput({ input, label }) {\r\n        return (\r\n            <div className=\"field\">\r\n                <label>{label}</label>\r\n                <input {...input} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = async (formValues) => {\r\n        const body = {\r\n            name1: formValues.name1 ? formValues.name1 : this.props.names.a.name,\r\n            name2: formValues.name2 ? formValues.name2 : this.props.names.b.name,\r\n            name3: formValues.name3 ? formValues.name3 : this.props.names.c.name,\r\n        };\r\n        await this.props.postName(body);\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <div onClick={this.props.onDismiss} className=\"ui dimmer modals visible active\">\r\n                <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n                    <div className=\"header\">Zmień nazwę czujnika</div>\r\n                    <div className=\"content\">\r\n                        <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\r\n                            <Field name=\"name1\" component={this.renderInput} label=\"Nazwa czujnika 1:\" />\r\n                            <Field name=\"name2\" component={this.renderInput} label=\"Nazwa czujnika 2:\" />\r\n                            <Field name=\"name3\" component={this.renderInput} label=\"Nazwa czujnika 3:\" />\r\n                            <div className=\"actions\">\r\n                                <button className=\"ui black button\">Zapisz</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>,\r\n            document.querySelector('#modal'),\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'sensorsNames',\r\n})(connect(null, { postName })(Modal));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchName } from '../actions';\r\n\r\nimport Modal from './Modal';\r\n\r\nclass Settings extends React.Component {\r\n    renderActions() {\r\n        return (\r\n            <React.Fragment>\r\n                <Link to={`/`} onClick={this.props.onSubmit} className=\"ui black button\">\r\n                    Zapisz\r\n                </Link>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                actions={this.renderActions()}\r\n                onDismiss={() => this.props.history.push('/')}\r\n                history={this.props.history}\r\n                names={this.props.names}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    if (state.data.names) {\r\n        return {\r\n            names: state.names,\r\n        };\r\n    } else {\r\n        return {\r\n            names: state.names,\r\n        };\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchName,\r\n})(Settings);\r\n","import moment from 'moment';\r\n\r\nexport default (tSensor, ySensor, param) => {\r\n    const mappedTSensor = tSensor.map((obj) => {\r\n        if (obj.time.length > 5) {\r\n            return { ...obj, time: moment(obj.time).format('HH:MM') };\r\n        } else {\r\n            return obj;\r\n        }\r\n    });\r\n\r\n    const mappedYSensor = ySensor.map((obj) => {\r\n        if (obj.time.length > 5) {\r\n            return { ...obj, time: moment(obj.time).format('HH:MM') };\r\n        } else {\r\n            return obj;\r\n        }\r\n    });\r\n\r\n    const current = mappedTSensor[mappedTSensor.length - 1];\r\n    const tTime = current.time;\r\n\r\n    let dataToChart = mappedYSensor.filter((obj) => obj.time > tTime);\r\n    dataToChart = [...dataToChart, ...mappedTSensor];\r\n\r\n    const dataTemp = dataToChart.map((obj) => obj[param]);\r\n    const dataTime = dataToChart.map((obj) => obj.time);\r\n\r\n    return { dataTemp, dataTime };\r\n};\r\n","import './chart.css';\r\nimport React from 'react';\r\nimport Chartist from 'chartist';\r\n\r\nclass Chart extends React.Component {\r\n    componentDidMount() {\r\n      \r\n        var data = {\r\n            // A labels array that can contain any sort of values\r\n            labels: this.props.time,\r\n            // Our series array that contains series objects or in this case series data arrays\r\n            series: [this.props.temp]\r\n          };\r\n\r\n\r\n          new Chartist.Line('.ct-chart', data, {\r\n            //low: 17,\r\n            showArea: false,\r\n            showPoint: false,\r\n            onlyInteger: false,\r\n            lineSmooth: Chartist.Interpolation.monotoneCubic({\r\n              fillHoles: false\r\n            }),\r\n            axisX: {\r\n              labelInterpolationFnc: function(value, index) {\r\n                return index % 10 === 0 ? value : null;\r\n              }\r\n            },\r\n            axisY: {\r\n              offset: 25\r\n            }\r\n          }, [\r\n            ['screen and (max-width: 300px)', {\r\n              axisX: {\r\n                labelInterpolationFnc: function(value, index) {\r\n                  return index % 30 === 0 ? value : null;\r\n                }\r\n              }\r\n            }],\r\n            ['screen and (min-width: 300px)', {\r\n              axisX: {\r\n                labelInterpolationFnc: function(value, index) {\r\n                  return index % 15 === 0 ? value : null;\r\n                }\r\n              }\r\n            }],\r\n            ['screen and (min-width: 600px)', {\r\n              axisX: {\r\n                labelInterpolationFnc: function(value, index) {\r\n                  return index % 10 === 0 ? value : null;\r\n                }\r\n              }\r\n            }]\r\n          ]);\r\n    };\r\n\r\n    componentDidUpdate() {\r\n      var data = {\r\n        labels: this.props.time,\r\n        series: [this.props.temp]\r\n      };\r\n\r\n\r\n      new Chartist.Line('.ct-chart', data, {\r\n        //low: 17,\r\n        showArea: false,\r\n        showPoint: false,\r\n        onlyInteger: false,\r\n        lineSmooth: Chartist.Interpolation.monotoneCubic({\r\n          fillHoles: false\r\n        }),\r\n        axisX: {\r\n          labelInterpolationFnc: function(value, index) {\r\n            return index % 10 === 0 ? value : null;\r\n          }\r\n        },\r\n        axisY: {\r\n          offset: 25\r\n        }\r\n      }, [\r\n        ['screen and (max-width: 300px)', {\r\n          axisX: {\r\n            labelInterpolationFnc: function(value, index) {\r\n              return index % 30 === 0 ? value : null;\r\n            }\r\n          }\r\n        }],\r\n        ['screen and (min-width: 300px)', {\r\n          axisX: {\r\n            labelInterpolationFnc: function(value, index) {\r\n              return index % 15 === 0 ? value : null;\r\n            }\r\n          }\r\n        }],\r\n        ['screen and (min-width: 600px)', {\r\n          axisX: {\r\n            labelInterpolationFnc: function(value, index) {\r\n              return index % 10 === 0 ? value : null;\r\n            }\r\n          }\r\n        }]\r\n      ]);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"chart1\" className=\"ct-chart .ct-golden-section \">\r\n\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Chart;\r\n","import moment from 'moment';\r\nimport React from 'react';\r\n// import './index.css';\r\n\r\nimport { CartesianGrid, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\n\r\nexport const Rechart = ({ data, type }) => {\r\n    const xBegin = moment().subtract(1, 'days').toDate().getTime();\r\n    return (\r\n        <div>\r\n            <ResponsiveContainer width=\"100%\" height={200} viewBox={'10 0 320 200'}>\r\n                <LineChart margin={{ top: 20, right: 1, left: -10, bottom: 11 }} data={data} viewBox={'10 0 320 200'}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis\r\n                        dataKey=\"time\"\r\n                        domain={[xBegin, 'dataMax']}\r\n                        name=\"Time\"\r\n                        tickFormatter={(unixTime) => moment(unixTime).format('HH:mm')}\r\n                        type=\"number\"\r\n                        angle={-50}\r\n                        textAnchor={'end'}\r\n                        allowDataOverflow={true}\r\n                    />\r\n                    <Tooltip\r\n                        labelFormatter={(unixTime) => moment(unixTime).format('HH:mm')}\r\n                        labelStyle={{ 'font-weight': 'bold' }}\r\n                    />\r\n                    <Line\r\n                        type=\"natural\"\r\n                        dataKey={type}\r\n                        stroke=\"#8884d8\"\r\n                        dot={false}\r\n                        strokeWidth={2}\r\n                        animationEasing={'ease-in-out'}\r\n                    />\r\n                    <YAxis dataKey={type} name={type} domain={['auto', 'dataMax']} />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Chart from './chart';\r\nimport './ChartModal.css';\r\nimport { Rechart } from './rechart/Rechart';\r\n\r\nconst ChartModal = ({ data, xData, yData, type, actions, onDismiss, isNewChart }) => {\r\n    const tempTitle = 'Temperatura w \\u2103';\r\n    const humTitle = 'Wilgotność w %';\r\n\r\n    return ReactDOM.createPortal(\r\n        <div onClick={onDismiss} className=\"ui dimmer modals visible active\">\r\n            <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n                <div className=\"header\">Wykres - ostatnie 24h</div>\r\n                <div className=\"content\">\r\n                    <div className=\"chart-title\">\r\n                        <h4>{type === 'temp' || type === 'tempOut' ? tempTitle : humTitle}</h4>\r\n                    </div>\r\n                    {isNewChart ? <Rechart data={data} type={type} /> : <Chart temp={yData} time={xData} />}\r\n                </div>\r\n                <div className=\"actions\">{actions}</div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal'),\r\n    );\r\n};\r\n\r\nexport default ChartModal;\r\n\r\n{\r\n    /* <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            // trigger={<Button>Wykres</Button>}\r\n        >\r\n            <Modal.Header>Select a Photo</Modal.Header>\r\n            <Modal.Content image>\r\n                <Rechart data={props.data} />\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button color=\"green\" onClick={() => setOpen(false)}>\r\n                    Wilgotność\r\n                </Button>\r\n                <Button content=\"Temperatura\" onClick={() => setOpen(false)} color={'green'} />\r\n            </Modal.Actions>\r\n        </Modal> */\r\n}\r\n","import moment from 'moment';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchToday } from '../actions';\r\nimport prepareData from '../prepareData';\r\nimport ChartModal from './ChartModal';\r\nimport './ShowChart.css';\r\n\r\nclass ShowChart extends React.Component {\r\n    dateWithMixedTimeType = moment('23.12.2022', 'DD.MM.YYYY');\r\n\r\n    isNewChart = () => (moment(this.props.today.date, 'DD.MM.YYYY').isAfter(this.dateWithMixedTimeType) ? true : false);\r\n    prepareTempToChart = () => {\r\n        if (this.props.today) {\r\n            if (this.props.match.path === '/chart/temp/:id') {\r\n                if (this.props.match.params.id === '1') {\r\n                    return prepareData(this.props.today.sensor01, this.props.yesterday.sensor01, 'temp');\r\n                } else if (this.props.match.params.id === '2') {\r\n                    return prepareData(this.props.today.sensor02, this.props.yesterday.sensor02, 'temp');\r\n                } else if (this.props.match.params.id === '3') {\r\n                    return prepareData(this.props.today.sensor03, this.props.yesterday.sensor03, 'temp');\r\n                } else if (this.props.match.params.id === '4') {\r\n                    return prepareData(this.props.today.sensor03, this.props.yesterday.sensor03, 'tempOut');\r\n                }\r\n            } else if (this.props.match.path === '/chart/hum/:id') {\r\n                if (this.props.match.params.id === '1') {\r\n                    return prepareData(this.props.today.sensor01, this.props.yesterday.sensor01, 'hum');\r\n                } else if (this.props.match.params.id === '2') {\r\n                    return prepareData(this.props.today.sensor02, this.props.yesterday.sensor02, 'hum');\r\n                } else if (this.props.match.params.id === '3') {\r\n                    return prepareData(this.props.today.sensor03, this.props.yesterday.sensor03, 'hum');\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    renderActions() {\r\n        if (this.props.match.params.id === '4') {\r\n            return (\r\n                <React.Fragment>\r\n                    <Link to=\"/\" className=\"ui green button\">\r\n                        Wróć\r\n                    </Link>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Link to={`/chart/temp/${this.props.match.params.id}`} className=\"ui green button\">\r\n                    Temperatura\r\n                </Link>\r\n                <Link to={`/chart/hum/${this.props.match.params.id}`} className=\"ui green button\">\r\n                    Wilgotność\r\n                </Link>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    getChartType = () => {\r\n        return this.props.match.path === '/chart/hum/:id'\r\n            ? 'hum'\r\n            : this.props.match.params.id === '4'\r\n            ? 'tempOut'\r\n            : 'temp';\r\n    };\r\n\r\n    render() {\r\n        if (this.props.today) {\r\n            console.log('&&', this.props.today[getSensorName(this.props.match.params.id)]);\r\n            return (\r\n                <ChartModal\r\n                    data={[\r\n                        ...prepareChartData(this.props.yesterday[getSensorName(this.props.match.params.id)]),\r\n                        ...prepareChartData(this.props.today[getSensorName(this.props.match.params.id)]),\r\n                    ]}\r\n                    xData={this.isNewChart() ? undefined : this.prepareTempToChart().dataTime}\r\n                    yData={this.isNewChart() ? undefined : this.prepareTempToChart().dataTemp}\r\n                    type={this.getChartType()}\r\n                    actions={this.renderActions()}\r\n                    onDismiss={() => this.props.history.push('/')}\r\n                    isNewChart={this.isNewChart()}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <ChartModal\r\n                    xData={null}\r\n                    yData={null}\r\n                    type={this.props.match.path === '/chart/temp/:id' ? 'temp' : 'hum'}\r\n                    actions={this.renderActions()}\r\n                    onDismiss={() => this.props.history.push('/')}\r\n                />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst prepareChartData = (data) => {\r\n    console.log('%DATA', data);\r\n    return data.map((obj) => {\r\n        return { ...obj, time: moment(obj.time).toDate().getTime() };\r\n    });\r\n};\r\n\r\nconst getSensorName = (id) => {\r\n    switch (id) {\r\n        case '1':\r\n            return 'sensor01';\r\n        case '2':\r\n            return 'sensor02';\r\n        case '3':\r\n            return 'sensor03';\r\n        case '4':\r\n            return 'sensor03';\r\n        case '5':\r\n            return 'sensor04';\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        today: state.data.today,\r\n        yesterday: state.data.yesterday,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchToday })(ShowChart);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport { fetchToday } from \"../actions\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport SensorsList from \"./sensors-list/SensorsList\";\r\nimport Settings from \"./Settings\";\r\nimport ShowChart from \"./ShowChart\";\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchToday();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <HashRouter>\r\n                    <Route path=\"/\" exact component={SensorsList} />\r\n                    <Route path=\"/chart/temp/:id\" exact component={ShowChart} />\r\n                    <Route path=\"/chart/hum/:id\" exact component={ShowChart} />\r\n                    <Route path=\"/settings\" exact component={Settings} />\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sensor01: state.data.sensor01,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchToday })(App);\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport fetchDayReducer from './fetchDayReducer';\r\nimport sensorNamesReducer from './sensorNamesReducer';\r\nimport fetchCovidReducer from './fetchCovidReducer';\r\n\r\nexport default combineReducers({\r\n    data: fetchDayReducer,\r\n    covid: fetchCovidReducer,\r\n    form: formReducer,\r\n    names: sensorNamesReducer\r\n});","import { FETCH_TODAY } from '../actions/types';\r\n\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_TODAY:\r\n            return { ...state,  ...action.payload }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n","import { FETCH_COVID, FETCH_COVID_PL } from '../actions/types';\r\n\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_COVID:\r\n            return { ...state,  world: action.payload };\r\n        case FETCH_COVID_PL:\r\n            return { ...state, poland: action.payload };\r\n        default:\r\n            return state;\r\n    };\r\n};","import { FETCH_NAME, POST_NAME } from '../actions/types';\r\n\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_NAME:\r\n            return { ...state,  ...action.payload };\r\n        case POST_NAME:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    };\r\n};","import * as dotenv from 'dotenv';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\ndotenv.config();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root'),\r\n);\r\n"],"sourceRoot":""}