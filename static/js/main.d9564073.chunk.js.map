{"version":3,"sources":["api/data.js","api/covid.js","api/covidPoland.js","actions/index.js","actions/types.js","components/Header.js","components/Card.js","components/CardCovid.js","components/CardExtended.js","components/CardTempOut.js","components/SensorsList.js","components/chart.js","components/ChartModal.js","prepareData.js","components/ShowChart.js","components/Modal.js","components/Settings.js","components/App.js","reducers/index.js","reducers/fetchDayReducer.js","reducers/fetchCovidReducer.js","reducers/sensorNamesReducer.js","index.js"],"names":["axios","create","baseURL","fetchToday","dispatch","a","data","get","response","console","log","type","payload","fetchName","fetchCovid","covid","fetchCovidPoland","covidPoland","Header","onFetchClick","props","Fragment","className","style","marginTop","onClick","this","React","Component","connect","Card","renderMaxTemp","maxTemp","time","renderMinTemp","minTemp","dotColor","id","onSettingClick","history","push","temp","hum","name","to","state","names","CardCovid","world","worldCases","cases","worldDeaths","deaths","poland","polandCases","polandDeaths","polandRecovery","recovered","polandTodayCases","todayCases","polandTodayDeaths","todayDeaths","renderDoor","isOpen","renderIsLightOn","isLight","renderTempOutdoor","tempOut","SensorsList","renderData","sensor01","sensor02","sensor03","tempA","length","tempB","tempC","maxTemp01","maxTemp02","maxTemp03","maxTempOut","minTemp01","minTemp02","minTemp03","minTempOut","name1","name2","b","title","renderNames","CardExtended","CardTempOut","today","Chart","labels","series","Chartist","Line","showArea","showPoint","onlyInteger","lineSmooth","Interpolation","monotoneCubic","fillHoles","axisX","labelInterpolationFnc","value","index","axisY","offset","ChartModal","ReactDOM","createPortal","onDismiss","e","stopPropagation","yData","xData","actions","document","querySelector","tSensor","ySensor","param","tTime","dataToChart","filter","obj","dataTemp","map","dataTime","ShowChart","prepareTempToChart","match","path","params","prepareData","yesterday","renderActions","Modal","onSubmit","formValues","postName","input","label","handleSubmit","Field","component","renderInput","reduxForm","form","post","Settings","App","exact","combineReducers","action","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.d9564073.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst herokuURL = 'https://young-ocean-79520.herokuapp.com/';\r\nconst localhost = 'http://localhost:8000';\r\n\r\nexport default axios.create({\r\n    baseURL: herokuURL\r\n});","import axios from 'axios';\r\n\r\nconst url = \"https://coronavirus-19-api.herokuapp.com/all\";\r\nconst general = \"https://corona-virus-stats.herokuapp.com/api/v1/cases/general-stats\";\r\n\r\nexport default axios.create({\r\n    baseURL: url\r\n});","import axios from 'axios';\r\n\r\nconst url = \"https://coronavirus-19-api.herokuapp.com/countries/poland\";\r\n\r\nexport default axios.create({\r\n    baseURL: url\r\n});","import data from '../api/data';\r\nimport covid from '../api/covid';\r\nimport { FETCH_TODAY, FETCH_NAME, POST_NAME, FETCH_COVID, FETCH_COVID_PL } from './types';\r\nimport covidPoland from '../api/covidPoland';\r\n\r\nexport const fetchToday = () => async dispatch => {\r\n    const response = await data.get('/');\r\n    console.log(response.data);\r\n    dispatch({ type: FETCH_TODAY, payload: response.data });\r\n};\r\n\r\nexport const fetchName = () => async dispatch => {\r\n    const response = await data.get('/sensor');\r\n    console.log(response);\r\n\r\n    dispatch({ type: FETCH_NAME, payload: response.data });\r\n};\r\n\r\nexport const postName = (formValues) => async dispatch => {\r\n    const response = await data.post('/sensor', formValues);\r\n    console.log(response);\r\n    \r\n    dispatch({ type: POST_NAME, payload: response.data });\r\n};\r\n\r\nexport const fetchCovid = () => async dispatch => {\r\n    const response = await covid.get('/');\r\n    console.log(response);\r\n\r\n    dispatch({ type: FETCH_COVID, payload: response.data });\r\n}\r\n\r\nexport const fetchCovidPoland = () => async dispatch => {\r\n    const response = await covidPoland.get('/');\r\n    console.log(response);\r\n\r\n    dispatch({ type: FETCH_COVID_PL, payload: response.data });\r\n}\r\n","export const FETCH_TODAY = 'FETCH_TODAY';\r\nexport const SENSOR_NAME = 'SENSOR_NAME';\r\nexport const FETCH_NAME = 'FETCH_NAME';\r\nexport const POST_NAME = 'POST_NAME';\r\nexport const FETCH_COVID = 'FETCH_COVID';\r\nexport const FETCH_COVID_PL = 'FETCH_COVID_PL';\r\n","import './Header.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchToday, fetchCovid, fetchCovidPoland } from '../actions';\r\n\r\nclass Header extends React.Component {\r\n    onFetchClick = () => {\r\n        this.props.fetchToday();\r\n        this.props.fetchCovid();\r\n        this.props.fetchCovidPoland();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h2 className=\"ui center aligned icon header\" style={{ marginTop: '5px'}} >\r\n                <i className=\"chart line icon\"></i>\r\n                    ŻAKA MONITOR\r\n                </h2>\r\n                <div className=\"button-margins\">\r\n                    <button onClick={this.onFetchClick} className=\"ui teal button\">Odśwież</button>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default connect(null, { fetchToday, fetchCovid, fetchCovidPoland })(Header);","import './Card.css';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchName } from '../actions';\r\n\r\n\r\nclass Card extends React.Component {\r\n\r\n\trenderMaxTemp = () => {\r\n\t\tif(this.props.maxTemp) {\r\n\t\t\tvar maxTemp = this.props.maxTemp.maxTemp;\r\n\t\t\tvar time = this.props.maxTemp.time;\r\n\t\t\treturn { maxTemp, time }\r\n\t\t}\r\n\r\n\t\treturn 'Loading...'\r\n\t};\r\n\r\n\trenderMinTemp = () => {\r\n\t\tif(this.props.minTemp) {\r\n\t\t\tvar minTemp = this.props.minTemp.minTemp;\r\n\t\t\tvar time = this.props.minTemp.time;\r\n\t\t\treturn { minTemp, time }\r\n\t\t}\r\n\r\n\t\treturn 'Loding...'\r\n\t};\r\n\r\n\tdotColor = () => {\r\n\t\tif(this.props.id === '1') {\r\n\t\t\treturn \"yellow\";\r\n\t\t} else if(this.props.id === '2') {\r\n\t\t\treturn \"blue\"\r\n\t\t}\r\n\t};\r\n\r\n\tonSettingClick = () => {\r\n\t\tthis.props.history.push('/settings');\r\n\t};\r\n\t \r\n\trender() {\r\n\t\tif(this.props.data) {\r\n\t\t\tvar { temp, time, hum } = this.props.data;\t\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t<div className=\"right floated mini ui header\">\r\n\t\t\t\t\t\t\t<span className=\"temp-header\">{`${temp} \\u2103`}</span>\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"header\">{this.props.name}</div>\r\n\t\t\t\t\t\t<div className=\"meta\">ID czujnika: {this.props.id}</div>\r\n\t\t\t\t\t\t<div className=\"description\">\r\n\t\t\t\t\t\t\tWilgotność: {`${hum}%`} <br/>\r\n\t\t\t\t\t\t\t<span className=\"max-data\">\r\n\t\t\t\t\t\t\t\tMax: {`${this.renderMaxTemp().maxTemp} \\u2103`} \r\n\t\t\t\t\t\t\t\t<span className=\"time\">o godz: {`${this.renderMaxTemp().time}`} </span><br/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"min-data\">\r\n\t\t\t\t\t\t\t\tMin: {`${this.renderMinTemp().minTemp} \\u2103`} \r\n\t\t\t\t\t\t\t\t<span className=\"time\">o godz: {`${this.renderMinTemp().time}`} </span><br/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\tCzas: {`${time}`} <br/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"extra content\">\r\n\t\t\t\t\t\t\t<div className=\"right floated top-margin\">\r\n\t\t\t\t\t\t\t\t<Link to={`/chart/temp/${this.props.id}`} className=\"ui purple button\">Wykres</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div onClick={this.onSettingClick} className=\"left floated\">\r\n\t\t\t\t\t\t\t\t<div className={`dot-${this.dotColor()}`}></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n\treturn {\r\n\t\tnames: state.names\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchName })(Card);\r\n","import './CardCovid.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass CardCovid extends React.Component {\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        if(this.props.covid.world) {\r\n            var worldCases = this.props.covid.world.cases;\r\n            var worldDeaths = this.props.covid.world.deaths;\r\n        };\r\n        \r\n        if(this.props.covid.poland) {\r\n            var polandCases = this.props.covid.poland.cases;\r\n            var polandDeaths = this.props.covid.poland.deaths;\t\r\n            var polandRecovery = this.props.covid.poland.recovered;\r\n            var polandTodayCases = this.props.covid.poland.todayCases;\r\n            var polandTodayDeaths = this.props.covid.poland.todayDeaths;\r\n        }\r\n        return (\r\n            <div className=\"card\" id=\"card\">\r\n                <div className=\"content\">\r\n                    <div className=\"header\">COVID Stats</div>\r\n                    <div className=\"meta\">\r\n                        Świat:\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        Potwierdzone przypadki: {`${worldCases}`} <br/>\r\n                        Zgony: {`${worldDeaths}`}\r\n                    </div>\r\n                    <hr className=\"line\"/>\r\n                    <div className=\"meta\">\r\n                        Polska:\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <span id=\"bold\">Potwierdzone przypadki: </span> {`${polandCases}`} <br/>\r\n                        Zgony: {`${polandDeaths}`} <br/>\r\n                        Wyzdrowienia: {`${polandRecovery}`} <br/>\r\n                        <br/>\r\n                        Dzisiaj potwierdzone przypadki: {`${polandTodayCases}`} <br/>\r\n                        Dzisiaj zgony: {`${polandTodayDeaths}`}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n\treturn {\r\n\t\tcovid: state.covid\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(CardCovid);","import './Card.css';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Card extends React.Component {\r\n\r\n\trenderMaxTemp = () => {\r\n\t\tif(this.props.maxTemp) {\r\n\t\t\tvar maxTemp = this.props.maxTemp.maxTemp;\r\n\t\t\tvar time = this.props.maxTemp.time;\r\n\t\t\treturn { maxTemp, time }\r\n\t\t}\r\n\r\n\t\treturn 'Loading...'\r\n\t};\r\n\r\n\trenderMinTemp = () => {\r\n\t\tif(this.props.minTemp) {\r\n\t\t\tvar minTemp = this.props.minTemp.minTemp;\r\n\t\t\tvar time = this.props.minTemp.time;\r\n\t\t\treturn { minTemp, time }\r\n\t\t}\r\n\r\n\t\treturn 'Loding...'\r\n    };\r\n    \r\n    renderDoor = () => {\r\n        if(this.props.data)\r\n            return this.props.data.isOpen ? \"otwarte\" : \"zamknięte\";\r\n    };\r\n\r\n    renderIsLightOn = () => {\r\n        if(this.props.data) {\r\n            return  this.props.data.isLight ? \"ON\" : \"OFF\";\r\n        };\r\n\t};\r\n\t\r\n\trenderTempOutdoor = () => {\r\n\t\tif(this.props.data) {\r\n\t\t\treturn this.props.data.tempOut;\r\n\t\t};\r\n\t};\r\n\r\n\tdotColor = () => {\r\n\t\tif(this.props.id === '1') {\r\n\t\t\treturn \"yellow\";\r\n\t\t} else if(this.props.id === '2') {\r\n\t\t\treturn \"blue\"\r\n\t\t} else if(this.props.id === '3') {\r\n\t\t\treturn \"black\"\r\n\t\t}\r\n\t};\r\n\r\n\tonSettingClick = () => {\r\n\t\tthis.props.history.push('/settings');\r\n\t};\r\n\t \r\n\trender() {\r\n\t\tif(this.props.data) {\r\n\t\t\tvar { temp, time, hum } = this.props.data;\t\r\n        }\r\n\t\t\r\n\t\treturn (\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t<div className=\"right floated mini ui header\">\r\n\t\t\t\t\t\t\t<span className=\"temp-header\">{`${temp} \\u2103`}</span>\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"header\">Garaż</div>\r\n\t\t\t\t\t\t<div className=\"meta\">ID czujnika: {this.props.id}</div>\r\n\t\t\t\t\t\t<div className=\"description\">\r\n\t\t\t\t\t\t\tWilgotność: {`${hum}%`} <br/>\r\n\t\t\t\t\t\t\t<span className=\"max-data\">\r\n\t\t\t\t\t\t\t\tMax: {`${this.renderMaxTemp().maxTemp} \\u2103`} \r\n\t\t\t\t\t\t\t\t<span className=\"time\">o godz: {`${this.renderMaxTemp().time}`} </span><br/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"min-data\">\r\n\t\t\t\t\t\t\t\tMin: {`${this.renderMinTemp().minTemp} \\u2103`} \r\n\t\t\t\t\t\t\t\t<span className=\"time\">o godz: {`${this.renderMinTemp().time}`} </span><br/>\r\n\t\t\t\t\t\t\t</span>\r\n                            Drzwi: {this.renderDoor()} <br/>\r\n                            Światło: {this.renderIsLightOn()} <br/>\r\n\t\t\t\t\t\t\tCzas: {`${time}`} <br/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"extra content\">\r\n\t\t\t\t\t\t\t<div className=\"right floated top-margin\">\r\n\t\t\t\t\t\t\t\t<Link to={`/chart/temp/${this.props.id}`} className=\"ui purple button\">Wykres</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div onClick={this.onSettingClick} className=\"left floated\">\r\n\t\t\t\t\t\t\t\t<div className={`dot-${this.dotColor()}`}></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n\treturn {\r\n\t\tnames: state.names\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Card);\r\n","import './Card.css';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Card extends React.Component {\r\n\r\n\trenderMaxTemp = () => {\r\n\t\tif(this.props.maxTemp) {\r\n\t\t\tvar maxTemp = this.props.maxTemp.maxTemp;\r\n\t\t\tvar time = this.props.maxTemp.time;\r\n\t\t\treturn { maxTemp, time }\r\n\t\t}\r\n\r\n\t\treturn 'Loading...'\r\n\t};\r\n\r\n\trenderMinTemp = () => {\r\n\t\tif(this.props.minTemp) {\r\n\t\t\tvar minTemp = this.props.minTemp.minTemp;\r\n\t\t\tvar time = this.props.minTemp.time;\r\n\t\t\treturn { minTemp, time }\r\n\t\t}\r\n\r\n\t\treturn 'Loding...'\r\n\t};\r\n\r\n\tdotColor = () => {\r\n\t\tif(this.props.id === '1') {\r\n\t\t\treturn \"yellow\";\r\n\t\t} else if(this.props.id === '2') {\r\n\t\t\treturn \"blue\"\r\n\t\t} else if(this.props.id === '3' || this.props.id === '4') {\r\n            return \"black\"\r\n        } \r\n\t};\r\n\r\n\tonSettingClick = () => {\r\n\t\tthis.props.history.push('/settings');\r\n\t};\r\n\t \r\n\trender() {\r\n\t\tif(this.props.data) {\r\n\t\t\tvar { tempOut, time } = this.props.data;\t\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t<div className=\"right floated mini ui header\">\r\n\t\t\t\t\t\t\t<span className=\"temp-header\">{`${tempOut} \\u2103`}</span>\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"header\">Na zewnątrz:</div>\r\n\t\t\t\t\t\t<div className=\"meta\">ID czujnika: {this.props.id}</div>\r\n\t\t\t\t\t\t<div className=\"description\">\r\n\t\t\t\t\t\t\t<span className=\"max-data\">\r\n\t\t\t\t\t\t\t\tMax: {`${this.renderMaxTemp().maxTemp} \\u2103`} \r\n\t\t\t\t\t\t\t\t<span className=\"time\">o godz: {`${this.renderMaxTemp().time}`} </span><br/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"min-data\">\r\n\t\t\t\t\t\t\t\tMin: {`${this.renderMinTemp().minTemp} \\u2103`} \r\n\t\t\t\t\t\t\t\t<span className=\"time\">o godz: {`${this.renderMinTemp().time}`} </span><br/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\tCzas: {`${time}`} <br/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"extra content\">\r\n\t\t\t\t\t\t\t<div className=\"right floated top-margin\">\r\n\t\t\t\t\t\t\t\t<Link to={`/chart/temp/${this.props.id}`} className=\"ui purple button\">Wykres</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div onClick={this.onSettingClick} className=\"left floated\">\r\n\t\t\t\t\t\t\t\t<div className={`dot-${this.dotColor()}`}></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n\treturn {\r\n\t\tnames: state.names\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Card);\r\n","import './SensorList.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchToday, fetchName, fetchCovid, fetchCovidPoland } from '../actions';\r\nimport Card from './Card';\r\nimport CardCovid from './CardCovid';\r\nimport CardExtended from './CardExtended';\r\nimport CardTempOut from './CardTempOut';\r\n\r\nclass SensorsList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchToday();\r\n        this.props.fetchName();\r\n        //this.props.fetchCovid();\r\n        this.props.fetchCovidPoland();\r\n    };\r\n\r\n    renderData = () => {\r\n        if(this.props.maxTemp) {\r\n            const { sensor01, sensor02, sensor03 } = this.props;\r\n            \r\n            const tempA = sensor01[sensor01.length-1];\r\n            const tempB = sensor02[sensor02.length-1];\r\n            const tempC = sensor03[sensor03.length-1];\r\n            const maxTemp01 = this.props.maxTemp.sensor01;\r\n            const maxTemp02 = this.props.maxTemp.sensor02;\r\n            const maxTemp03 = this.props.maxTemp.sensor03;\r\n            const maxTempOut = this.props.maxTemp.tempOut;\r\n            const minTemp01 = this.props.minTemp.sensor01;\r\n            const minTemp02 = this.props.minTemp.sensor02;\r\n            const minTemp03 = this.props.minTemp.sensor03;\r\n            const minTempOut = this.props.minTemp.tempOut;\r\n            \r\n            return { tempA, tempB, tempC, maxTemp01, maxTemp02, maxTemp03, maxTempOut, minTemp01, minTemp02, minTemp03, minTempOut }\r\n        } \r\n        return 'Loading'\r\n    };\r\n/*\r\n    renderSensor = () => {\r\n        this.props.sensor01.map(data => {\r\n            return (\r\n                <Sensor data={this.renderData()} />\r\n            );\r\n        });\r\n    };*/\r\n\r\n    renderNames() {\t\t\r\n\t\tif(this.props.names.a) {\r\n\t\t\tconst name1 = this.props.names.a.name;\r\n\t\t\tconst name2 = this.props.names.b.name;\r\n\r\n\t\t\treturn { name1, name2 };\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn 'Loading...';\r\n\t\t}\r\n\r\n\t};\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui cards\">\r\n                <Card data={this.renderData().tempA} maxTemp={this.renderData().maxTemp01} minTemp={this.renderData().minTemp01} title='Sensor A' id='1' history={this.props.history} name={this.renderNames().name1} />\r\n                <Card data={this.renderData().tempB} maxTemp={this.renderData().maxTemp02} minTemp={this.renderData().minTemp02} title='Sensor B' id='2' history={this.props.history} name={this.renderNames().name2} />\r\n                <CardExtended data={this.renderData().tempC} maxTemp={this.renderData().maxTemp03} minTemp={this.renderData().minTemp03} title='Sensor C' id='3' history={this.props.history} name=\"Garaz\" />\r\n                <CardTempOut data={this.renderData().tempC} maxTemp={this.renderData().maxTempOut} minTemp={this.renderData().minTempOut} id='4' history={this.props.history} />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    if(state.data.today) {\r\n        return {\r\n            sensor01: state.data.today.sensor01,\r\n            sensor02: state.data.today.sensor02,\r\n            sensor03: state.data.today.sensor03,\r\n            maxTemp: state.data.today.maxTemp,\r\n            minTemp: state.data.today.minTemp,\r\n            names: state.names\r\n        };\r\n    } else {\r\n        return {\r\n            names: state.names\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchToday, fetchName, fetchCovid, fetchCovidPoland })(SensorsList);","import './chart.css';\r\nimport React from 'react';\r\nimport Chartist from 'chartist';\r\n\r\nclass Chart extends React.Component {\r\n    componentDidMount() {\r\n      \r\n        var data = {\r\n            // A labels array that can contain any sort of values\r\n            labels: this.props.time,\r\n            // Our series array that contains series objects or in this case series data arrays\r\n            series: [this.props.temp]\r\n          };\r\n\r\n\r\n          new Chartist.Line('.ct-chart', data, {\r\n            //low: 17,\r\n            showArea: false,\r\n            showPoint: false,\r\n            onlyInteger: false,\r\n            lineSmooth: Chartist.Interpolation.monotoneCubic({\r\n              fillHoles: false\r\n            }),\r\n            axisX: {\r\n              labelInterpolationFnc: function(value, index) {\r\n                return index % 10 === 0 ? value : null;\r\n              }\r\n            },\r\n            axisY: {\r\n              offset: 25\r\n            }\r\n          }, [\r\n            ['screen and (max-width: 300px)', {\r\n              axisX: {\r\n                labelInterpolationFnc: function(value, index) {\r\n                  return index % 30 === 0 ? value : null;\r\n                }\r\n              }\r\n            }],\r\n            ['screen and (min-width: 300px)', {\r\n              axisX: {\r\n                labelInterpolationFnc: function(value, index) {\r\n                  return index % 15 === 0 ? value : null;\r\n                }\r\n              }\r\n            }],\r\n            ['screen and (min-width: 600px)', {\r\n              axisX: {\r\n                labelInterpolationFnc: function(value, index) {\r\n                  return index % 10 === 0 ? value : null;\r\n                }\r\n              }\r\n            }]\r\n          ]);\r\n    };\r\n\r\n    componentDidUpdate() {\r\n      var data = {\r\n        labels: this.props.time,\r\n        series: [this.props.temp]\r\n      };\r\n\r\n\r\n      new Chartist.Line('.ct-chart', data, {\r\n        //low: 17,\r\n        showArea: false,\r\n        showPoint: false,\r\n        onlyInteger: false,\r\n        lineSmooth: Chartist.Interpolation.monotoneCubic({\r\n          fillHoles: false\r\n        }),\r\n        axisX: {\r\n          labelInterpolationFnc: function(value, index) {\r\n            return index % 10 === 0 ? value : null;\r\n          }\r\n        },\r\n        axisY: {\r\n          offset: 25\r\n        }\r\n      }, [\r\n        ['screen and (max-width: 300px)', {\r\n          axisX: {\r\n            labelInterpolationFnc: function(value, index) {\r\n              return index % 30 === 0 ? value : null;\r\n            }\r\n          }\r\n        }],\r\n        ['screen and (min-width: 300px)', {\r\n          axisX: {\r\n            labelInterpolationFnc: function(value, index) {\r\n              return index % 15 === 0 ? value : null;\r\n            }\r\n          }\r\n        }],\r\n        ['screen and (min-width: 600px)', {\r\n          axisX: {\r\n            labelInterpolationFnc: function(value, index) {\r\n              return index % 10 === 0 ? value : null;\r\n            }\r\n          }\r\n        }]\r\n      ]);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"chart1\" className=\"ct-chart .ct-golden-section \">\r\n\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Chart;\r\n","import './ChartModal.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Chart from './chart';\r\n\r\nconst ChartModal = props => {\r\n    const tempTitle = 'Temperatura w \\u2103';\r\n    const humTitle = 'Wilgotność w %';\r\n    console.log(props);\r\n\r\n    return ReactDOM.createPortal(\r\n        <div onClick={props.onDismiss} className=\"ui dimmer modals visible active\">\r\n            <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n                <div className=\"header\">Wykres - ostatnie 24h</div>\r\n                <div className=\"content\">\r\n                    <div className=\"chart-title\">\r\n                        <h4>{props.type === 'temp' ? tempTitle : humTitle}</h4>\r\n                    </div>\r\n                    <Chart temp={props.yData} time={props.xData} />\r\n                </div>\r\n                <div className=\"actions\">\r\n                    {props.actions}\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n    );\r\n};\r\n\r\nexport default ChartModal;","export default (tSensor, ySensor, param) => {\r\n    \r\n    if(tSensor) {\r\n        const current = tSensor[tSensor.length - 1];\r\n        const tTime = current.time;\r\n        \r\n        let dataToChart = ySensor.filter(obj => obj.time > tTime);\r\n        dataToChart = [ ...dataToChart, ...tSensor ];\r\n\r\n        const dataTemp = dataToChart.map(obj => obj[param]);\r\n        const dataTime = dataToChart.map(obj => obj.time);\r\n\r\n        \r\n        return { dataTemp, dataTime }\r\n    }\r\n};","import './ShowChart.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ChartModal from './ChartModal';\r\nimport { fetchToday } from '../actions';\r\nimport prepareData from '../prepareData';\r\n\r\nclass ShowChart extends React.Component {\r\n\r\n    prepareTempToChart = () => {\r\n        if(this.props.today) {\r\n            if(this.props.match.path === '/chart/temp/:id') {\r\n\r\n\r\n                if(this.props.match.params.id === '1') {\r\n                    console.log('Hello from preapareTemp');\r\n\r\n                    return prepareData(this.props.today.sensor01, this.props.yesterday.sensor01, 'temp');\r\n                \r\n                } else if(this.props.match.params.id === '2') {\r\n        \r\n                    return prepareData(this.props.today.sensor02, this.props.yesterday.sensor02, 'temp');\r\n                } else if(this.props.match.params.id === '3') {\r\n\r\n                    return prepareData(this.props.today.sensor03, this.props.yesterday.sensor03, 'temp');\r\n                } else if(this.props.match.params.id === '4') {\r\n\r\n                    return prepareData(this.props.today.sensor03, this.props.yesterday.sensor03, 'tempOut');\r\n                }\r\n            } else if(this.props.match.path === '/chart/hum/:id') {\r\n\r\n                if(this.props.match.params.id === '1') {\r\n                    console.log('Hello from preapareHum');\r\n        \r\n                    return prepareData(this.props.today.sensor01, this.props.yesterday.sensor01, 'hum');\r\n\r\n                } else if(this.props.match.params.id === '2') {\r\n        \r\n                    return prepareData(this.props.today.sensor02, this.props.yesterday.sensor02, 'hum');\r\n                } else if(this.props.match.params.id === '3') {\r\n\r\n                    return prepareData(this.props.today.sensor03, this.props.yesterday.sensor03, 'hum');\r\n                }\r\n            };\r\n        };\r\n    };\r\n\r\n    renderActions() {\r\n        if(this.props.match.params.id === '4') {\r\n            return (\r\n                <React.Fragment>\r\n                    <Link to='/' className=\"ui purple button\">Wróć</Link>\r\n                </React.Fragment>\r\n            )    \r\n        }\r\n        return (\r\n            <React.Fragment>\r\n\t\t\t    <Link to={`/chart/temp/${this.props.match.params.id}`} className=\"ui purple button\">Temperatura</Link>\r\n\t\t\t    <Link to={`/chart/hum/${this.props.match.params.id}`} className=\"ui purple button\">Wilgotność</Link>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        \r\n        if(this.props.today) {\r\n            return (\r\n                <ChartModal \r\n                    xData={this.prepareTempToChart().dataTime}\r\n                    yData={this.prepareTempToChart().dataTemp}\r\n                    type={this.props.match.path === '/chart/temp/:id' ? 'temp' : 'hum'}\r\n                    actions={this.renderActions()}\r\n                    onDismiss={() => this.props.history.push(\"/\")}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <ChartModal \r\n                    xData={null}\r\n                    yData={null}\r\n                    type={this.props.match.path === '/chart/temp/:id' ? 'temp' : 'hum'}\r\n                    actions={this.renderActions()}\r\n                    onDismiss={() => this.props.history.push(\"/\")}\r\n                />\r\n            )\r\n        }\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        today: state.data.today,\r\n        yesterday: state.data.yesterday\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchToday })(ShowChart);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { postName } from '../actions';\r\n\r\nclass Modal extends React.Component {\r\n    renderInput({ input, label }) {\r\n        return (\r\n            <div className=\"field\">\r\n                <label>{label}</label>\r\n                <input {...input} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = async (formValues) => {\r\n        console.log(formValues);\r\n        await this.props.postName(formValues);\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n   \r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <div onClick={this.props.onDismiss} className=\"ui dimmer modals visible active\">\r\n                <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n                    <div className=\"header\">Zmień nazwę czujnika</div>\r\n                    <div className=\"content\">\r\n                        <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\r\n                            <Field name=\"name1\" component={this.renderInput} label=\"Nazwa czujnika 1:\" />\r\n                            <Field name=\"name2\" component={this.renderInput} label=\"Nazwa czujnika 2:\" />\r\n                            <div className=\"actions\">\r\n                                <button className=\"ui black button\">Zapisz</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>,\r\n            document.querySelector('#modal')\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'sensorsNames'\r\n})(connect(null, { postName })(Modal));\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Modal from './Modal';\r\n\r\n\r\nclass Settings extends React.Component {\r\n    renderActions() {\r\n        return (\r\n            <React.Fragment>\r\n\t\t\t    <Link to={`/`} onClick={this.props.onSubmit} className=\"ui black button\">Zapisz</Link>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                actions={this.renderActions()}\r\n                onDismiss={() => this.props.history.push(\"/\")}\r\n                history={this.props.history}\r\n            />\r\n        );\r\n    };\r\n}\r\n\r\nexport default Settings;\r\n","import './App.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\n\r\nimport Header from './Header';\r\nimport SensorsList from './SensorsList';\r\nimport { fetchToday } from '../actions';\r\nimport ShowChart from './ShowChart';\r\nimport Settings from './Settings';\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchToday();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <HashRouter>\r\n                    <Route path=\"/\" exact component={SensorsList} />\r\n                    <Route path=\"/chart/temp/:id\" exact component={ShowChart} />\r\n                    <Route path=\"/chart/hum/:id\" exact component={ShowChart} />\r\n                    <Route path=\"/settings\" exact component={Settings} />\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sensor01: state.data.sensor01\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { fetchToday })(App);\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport fetchDayReducer from './fetchDayReducer';\r\nimport sensorNamesReducer from './sensorNamesReducer';\r\nimport fetchCovidReducer from './fetchCovidReducer';\r\n\r\nexport default combineReducers({\r\n    data: fetchDayReducer,\r\n    covid: fetchCovidReducer,\r\n    form: formReducer,\r\n    names: sensorNamesReducer\r\n});","import { FETCH_TODAY } from '../actions/types';\r\n\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_TODAY:\r\n            return { ...state,  ...action.payload }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n","import { FETCH_COVID, FETCH_COVID_PL } from '../actions/types';\r\n\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_COVID:\r\n            return { ...state,  world: action.payload };\r\n        case FETCH_COVID_PL:\r\n            return { ...state, poland: action.payload };\r\n        default:\r\n            return state;\r\n    };\r\n};","import { FETCH_NAME, POST_NAME } from '../actions/types';\r\n\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_NAME:\r\n            return { ...state,  ...action.payload };\r\n        case POST_NAME:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    };\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))    \r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}