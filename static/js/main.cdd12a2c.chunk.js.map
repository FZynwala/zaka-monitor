{"version":3,"sources":["api/data.js","actions/index.js","actions/types.js","components/Header.js","components/Sensor.js","components/Card.js","components/SensorsList.js","components/chart.js","components/ChartModal.js","prepareData.js","components/ShowChart.js","components/Modal.js","components/Settings.js","components/App.js","reducers/index.js","reducers/fetchDayReducer.js","reducers/sensorNamesReducer.js","index.js"],"names":["axios","create","baseURL","fetchToday","dispatch","a","async","data","get","response","type","payload","fetchName","console","log","Header","onFetchClick","props","Fragment","className","style","marginTop","onClick","this","React","Component","connect","Sensor","title","marginBottom","Card","renderMaxTemp","maxTemp","time","renderMinTemp","minTemp","dotColor","id","onSettingClick","history","push","temp","hum","name","to","state","names","SensorsList","renderData","sensor01","sensor02","tempA","length","tempB","maxTemp01","maxTemp02","minTemp01","minTemp02","renderSensor","map","name1","name2","b","renderNames","today","Chart","labels","series","Chartist","Line","showArea","showPoint","onlyInteger","lineSmooth","Interpolation","monotoneCubic","fillHoles","axisX","labelInterpolationFnc","value","index","axisY","offset","ChartModal","ReactDOM","createPortal","onDismiss","e","stopPropagation","yData","xData","actions","document","querySelector","tSensor","ySensor","param","tTime","dataToChart","filter","obj","dataTemp","dataTime","ShowChart","prepareTempToChart","match","path","params","prepareData","yesterday","renderActions","Modal","onSubmit","formValues","postName","input","label","handleSubmit","Field","component","renderInput","reduxForm","form","post","Settings","App","exact","combineReducers","action","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.cdd12a2c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst herokuURL = 'https://young-ocean-79520.herokuapp.com/';\r\nconst localhost = 'http://localhost:8000';\r\n\r\nexport default axios.create({\r\n    baseURL: herokuURL\r\n});","import data from '../api/data';\r\nimport { FETCH_TODAY, FETCH_NAME, POST_NAME } from './types';\r\n\r\nexport const fetchToday = () => async dispatch => {\r\n    const response = await data.get('/');\r\n\r\n    dispatch({ type: FETCH_TODAY, payload: response.data });\r\n};\r\n\r\nexport const fetchName = () => async dispatch => {\r\n    const response = await data.get('/sensor');\r\n    console.log(response);\r\n\r\n    dispatch({ type: FETCH_NAME, payload: response.data });\r\n};\r\n\r\nexport const postName = (formValues) => async dispatch => {\r\n    const response = await data.post('/sensor', formValues);\r\n    console.log(response);\r\n    \r\n    dispatch({ type: POST_NAME, payload: response.data });\r\n};\r\n","export const FETCH_TODAY = 'FETCH_TODAY';\r\nexport const SENSOR_NAME = 'SENSOR_NAME';\r\nexport const FETCH_NAME = 'FETCH_NAME';\r\nexport const POST_NAME = 'POST_NAME';\r\n","import './Header.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchToday } from '../actions';\r\n\r\nclass Header extends React.Component {\r\n    onFetchClick = () => {\r\n        this.props.fetchToday();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h2 className=\"ui center aligned icon header\" style={{ marginTop: '5px'}} >\r\n                <i className=\"chart line icon\"></i>\r\n                    ŻAKA MONITOR\r\n                </h2>\r\n                <div className=\"button-margins\">\r\n                    <button onClick={this.onFetchClick} className=\"ui teal button\">Odśwież</button>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default connect(null, { fetchToday })(Header);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Sensor extends React.Component {\r\n    \r\n\r\n    render() {\r\n        console.log(`SENSOR${this.props.title}`);\r\n        return (\r\n            <React.Fragment>\r\n            <div className=\"item-box item\" style={{marginBottom: '0px'}}>\r\n                <div className=\"content\">\r\n                    {this.props.title}: {this.props.data}\r\n                </div>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\n\r\nexport default connect(null)(Sensor);\r\n","import './Card.css';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchName } from '../actions';\r\n\r\n\r\nclass Card extends React.Component {\r\n\r\n\trenderMaxTemp = () => {\r\n\t\tif(this.props.maxTemp) {\r\n\t\t\tvar maxTemp = this.props.maxTemp.maxTemp;\r\n\t\t\tvar time = this.props.maxTemp.time;\r\n\t\t\treturn { maxTemp, time }\r\n\t\t}\r\n\r\n\t\treturn 'Loding...'\r\n\t};\r\n\r\n\trenderMinTemp = () => {\r\n\t\tif(this.props.minTemp) {\r\n\t\t\tvar minTemp = this.props.minTemp.minTemp;\r\n\t\t\tvar time = this.props.minTemp.time;\r\n\t\t\treturn { minTemp, time }\r\n\t\t}\r\n\r\n\t\treturn 'Loding...'\r\n\t};\r\n\r\n\tdotColor = () => {\r\n\t\tif(this.props.id === '1') {\r\n\t\t\treturn \"yellow\";\r\n\t\t} else if(this.props.id === '2') {\r\n\t\t\treturn \"blue\"\r\n\t\t}\r\n\t};\r\n\r\n\tonSettingClick = () => {\r\n\t\tthis.props.history.push('/settings');\r\n\t};\r\n\t \r\n\trender() {\r\n\t\tif(this.props.data) {\r\n\t\t\tvar { temp, time, hum } = this.props.data;\t\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t<div className=\"right floated mini ui header\">\r\n\t\t\t\t\t\t\t<span className=\"temp-header\">{`${temp} \\u2103`}</span>\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"header\">{this.props.name}</div>\r\n\t\t\t\t\t\t<div className=\"meta\">ID czujnika: {this.props.id}</div>\r\n\t\t\t\t\t\t<div className=\"description\">\r\n\t\t\t\t\t\t\tWilgotność: {`${hum}%`} <br/>\r\n\t\t\t\t\t\t\t<span className=\"max-data\">\r\n\t\t\t\t\t\t\t\tMax: {`${this.renderMaxTemp().maxTemp} \\u2103`} \r\n\t\t\t\t\t\t\t\t<span className=\"time\">o godz: {`${this.renderMaxTemp().time}`} </span><br/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"min-data\">\r\n\t\t\t\t\t\t\t\tMin: {`${this.renderMinTemp().minTemp} \\u2103`} \r\n\t\t\t\t\t\t\t\t<span className=\"time\">o godz: {`${this.renderMinTemp().time}`} </span><br/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\tCzas: {`${time}`} <br/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"extra content\">\r\n\t\t\t\t\t\t\t<div className=\"right floated top-margin\">\r\n\t\t\t\t\t\t\t\t<Link to={`/chart/temp/${this.props.id}`} className=\"ui purple button\">Wykres</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div onClick={this.onSettingClick} className=\"left floated\">\r\n\t\t\t\t\t\t\t\t<div className={`dot-${this.dotColor()}`}></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n\treturn {\r\n\t\tnames: state.names\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchName })(Card);\r\n","import './SensorList.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchToday, fetchName } from '../actions';\r\nimport Sensor from './Sensor';\r\nimport Card from './Card';\r\n\r\nclass SensorsList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchToday();\r\n        this.props.fetchName();\r\n    };\r\n\r\n    renderData = () => {\r\n        if(this.props.maxTemp) {\r\n            const { sensor01, sensor02 } = this.props;\r\n            \r\n            const tempA = sensor01[sensor01.length-1];\r\n            const tempB = sensor02[sensor02.length-1];\r\n            const maxTemp01 = this.props.maxTemp.sensor01;\r\n            const maxTemp02 = this.props.maxTemp.sensor02;\r\n            const minTemp01 = this.props.minTemp.sensor01;\r\n            const minTemp02 = this.props.minTemp.sensor02;\r\n            \r\n            return { tempA, tempB, maxTemp01, maxTemp02, minTemp01, minTemp02 }\r\n        } \r\n        return 'Loading'\r\n    };\r\n\r\n    renderSensor = () => {\r\n        this.props.sensor01.map(data => {\r\n            return (\r\n                <Sensor data={this.renderData()} />\r\n            );\r\n        });\r\n    };\r\n\r\n    renderNames() {\t\t\r\n\t\tif(this.props.names.a) {\r\n\t\t\tconst name1 = this.props.names.a.name;\r\n\t\t\tconst name2 = this.props.names.b.name;\r\n\r\n\t\t\treturn { name1, name2 };\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\treturn 'Loading...';\r\n\t\t}\r\n\r\n\t};\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui cards\">\r\n                <Card data={this.renderData().tempA} maxTemp={this.renderData().maxTemp01} minTemp={this.renderData().minTemp01} title='Sensor A' id='1' history={this.props.history} name={this.renderNames().name1} />\r\n                <Card data={this.renderData().tempB} maxTemp={this.renderData().maxTemp02} minTemp={this.renderData().minTemp02} title='Sensor B' id='2' history={this.props.history} name={this.renderNames().name2} />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    if(state.data.today) {\r\n        return {\r\n            sensor01: state.data.today.sensor01,\r\n            sensor02: state.data.today.sensor02,\r\n            maxTemp: state.data.today.maxTemp,\r\n            minTemp: state.data.today.minTemp,\r\n            names: state.names\r\n        };\r\n    } else {\r\n        return {\r\n            names: state.names\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchToday, fetchName })(SensorsList);","import './chart.css';\r\nimport React from 'react';\r\nimport Chartist from 'chartist';\r\n\r\nclass Chart extends React.Component {\r\n    componentDidMount() {\r\n      \r\n        var data = {\r\n            // A labels array that can contain any sort of values\r\n            labels: this.props.time,\r\n            // Our series array that contains series objects or in this case series data arrays\r\n            series: [this.props.temp]\r\n          };\r\n\r\n\r\n          new Chartist.Line('.ct-chart', data, {\r\n            //low: 17,\r\n            showArea: false,\r\n            showPoint: false,\r\n            onlyInteger: false,\r\n            lineSmooth: Chartist.Interpolation.monotoneCubic({\r\n              fillHoles: false\r\n            }),\r\n            axisX: {\r\n              labelInterpolationFnc: function(value, index) {\r\n                return index % 10 === 0 ? value : null;\r\n              }\r\n            },\r\n            axisY: {\r\n              offset: 25\r\n            }\r\n          }, [\r\n            ['screen and (max-width: 300px)', {\r\n              axisX: {\r\n                labelInterpolationFnc: function(value, index) {\r\n                  return index % 30 === 0 ? value : null;\r\n                }\r\n              }\r\n            }],\r\n            ['screen and (min-width: 300px)', {\r\n              axisX: {\r\n                labelInterpolationFnc: function(value, index) {\r\n                  return index % 15 === 0 ? value : null;\r\n                }\r\n              }\r\n            }],\r\n            ['screen and (min-width: 600px)', {\r\n              axisX: {\r\n                labelInterpolationFnc: function(value, index) {\r\n                  return index % 10 === 0 ? value : null;\r\n                }\r\n              }\r\n            }]\r\n          ]);\r\n    };\r\n\r\n    componentDidUpdate() {\r\n      var data = {\r\n        labels: this.props.time,\r\n        series: [this.props.temp]\r\n      };\r\n\r\n\r\n      new Chartist.Line('.ct-chart', data, {\r\n        //low: 17,\r\n        showArea: false,\r\n        showPoint: false,\r\n        onlyInteger: false,\r\n        lineSmooth: Chartist.Interpolation.monotoneCubic({\r\n          fillHoles: false\r\n        }),\r\n        axisX: {\r\n          labelInterpolationFnc: function(value, index) {\r\n            return index % 10 === 0 ? value : null;\r\n          }\r\n        },\r\n        axisY: {\r\n          offset: 25\r\n        }\r\n      }, [\r\n        ['screen and (max-width: 300px)', {\r\n          axisX: {\r\n            labelInterpolationFnc: function(value, index) {\r\n              return index % 30 === 0 ? value : null;\r\n            }\r\n          }\r\n        }],\r\n        ['screen and (min-width: 300px)', {\r\n          axisX: {\r\n            labelInterpolationFnc: function(value, index) {\r\n              return index % 15 === 0 ? value : null;\r\n            }\r\n          }\r\n        }],\r\n        ['screen and (min-width: 600px)', {\r\n          axisX: {\r\n            labelInterpolationFnc: function(value, index) {\r\n              return index % 10 === 0 ? value : null;\r\n            }\r\n          }\r\n        }]\r\n      ]);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"chart1\" className=\"ct-chart .ct-golden-section \">\r\n\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Chart;\r\n","import './ChartModal.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Chart from './chart';\r\n\r\nconst ChartModal = props => {\r\n    const tempTitle = 'Temperatura w \\u2103';\r\n    const humTitle = 'Wilgotność w %';\r\n    console.log(props);\r\n\r\n    return ReactDOM.createPortal(\r\n        <div onClick={props.onDismiss} className=\"ui dimmer modals visible active\">\r\n            <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n                <div className=\"header\">Wykres - ostatnie 24h</div>\r\n                <div className=\"content\">\r\n                    <div className=\"chart-title\">\r\n                        <h4>{props.type === 'temp' ? tempTitle : humTitle}</h4>\r\n                    </div>\r\n                    <Chart temp={props.yData} time={props.xData} />\r\n                </div>\r\n                <div className=\"actions\">\r\n                    {props.actions}\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n    );\r\n};\r\n\r\nexport default ChartModal;","export default (tSensor, ySensor, param) => {\r\n    console.log(tSensor);\r\n    if(tSensor) {\r\n        const current = tSensor[tSensor.length - 1];\r\n        const tTime = current.time;\r\n        \r\n        let dataToChart = ySensor.filter(obj => obj.time > tTime);\r\n        dataToChart = [ ...dataToChart, ...tSensor ];\r\n\r\n        const dataTemp = dataToChart.map(obj => obj[param]);\r\n        const dataTime = dataToChart.map(obj => obj.time);\r\n\r\n        \r\n        return { dataTemp, dataTime }\r\n    }\r\n};","import './ShowChart.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport ChartModal from './ChartModal';\r\nimport { fetchToday } from '../actions';\r\nimport prepareData from '../prepareData';\r\n\r\nclass ShowChart extends React.Component {\r\n\r\n    prepareTempToChart = () => {\r\n        if(this.props.today) {\r\n            if(this.props.match.path === '/chart/temp/:id') {\r\n\r\n\r\n                if(this.props.match.params.id === '1') {\r\n                    console.log('Hello from preapareTemp');\r\n\r\n                    return prepareData(this.props.today.sensor01, this.props.yesterday.sensor01, 'temp');\r\n                \r\n                } else if(this.props.match.params.id === '2') {\r\n        \r\n                    return prepareData(this.props.today.sensor02, this.props.yesterday.sensor02, 'temp');\r\n                }\r\n            } else if(this.props.match.path === '/chart/hum/:id') {\r\n\r\n                if(this.props.match.params.id === '1') {\r\n                    console.log('Hello from preapareHum');\r\n        \r\n                    return prepareData(this.props.today.sensor01, this.props.yesterday.sensor01, 'hum');\r\n\r\n                } else if(this.props.match.params.id === '2') {\r\n        \r\n                    return prepareData(this.props.today.sensor02, this.props.yesterday.sensor02, 'hum');\r\n                }\r\n            };\r\n        };\r\n    };\r\n\r\n    renderActions() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n\t\t\t    <Link to={`/chart/temp/${this.props.match.params.id}`} className=\"ui purple button\">Temperatura</Link>\r\n\t\t\t    <Link to={`/chart/hum/${this.props.match.params.id}`} className=\"ui purple button\">Wilgotność</Link>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        \r\n        if(this.props.today) {\r\n            return (\r\n                <ChartModal \r\n                    xData={this.prepareTempToChart().dataTime}\r\n                    yData={this.prepareTempToChart().dataTemp}\r\n                    type={this.props.match.path === '/chart/temp/:id' ? 'temp' : 'hum'}\r\n                    actions={this.renderActions()}\r\n                    onDismiss={() => this.props.history.push(\"/\")}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <ChartModal \r\n                    xData={null}\r\n                    yData={null}\r\n                    type={this.props.match.path === '/chart/temp/:id' ? 'temp' : 'hum'}\r\n                    actions={this.renderActions()}\r\n                    onDismiss={() => this.props.history.push(\"/\")}\r\n                />\r\n            )\r\n        }\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        today: state.data.today,\r\n        yesterday: state.data.yesterday\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchToday })(ShowChart);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { postName } from '../actions';\r\n\r\nclass Modal extends React.Component {\r\n    renderInput({ input, label }) {\r\n        return (\r\n            <div className=\"field\">\r\n                <label>{label}</label>\r\n                <input {...input} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = async (formValues) => {\r\n        console.log(formValues);\r\n        await this.props.postName(formValues);\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n   \r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <div onClick={this.props.onDismiss} className=\"ui dimmer modals visible active\">\r\n                <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n                    <div className=\"header\">Zmień nazwę czujnika</div>\r\n                    <div className=\"content\">\r\n                        <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\r\n                            <Field name=\"name1\" component={this.renderInput} label=\"Nazwa czujnika 1:\" />\r\n                            <Field name=\"name2\" component={this.renderInput} label=\"Nazwa czujnika 2:\" />\r\n                            <div className=\"actions\">\r\n                                <button className=\"ui black button\">Zapisz</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>,\r\n            document.querySelector('#modal')\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'sensorsNames'\r\n})(connect(null, { postName })(Modal));\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Modal from './Modal';\r\n\r\n\r\nclass Settings extends React.Component {\r\n    renderActions() {\r\n        return (\r\n            <React.Fragment>\r\n\t\t\t    <Link to={`/`} onClick={this.props.onSubmit} className=\"ui black button\">Zapisz</Link>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                actions={this.renderActions()}\r\n                onDismiss={() => this.props.history.push(\"/\")}\r\n                history={this.props.history}\r\n            />\r\n        );\r\n    };\r\n}\r\n\r\nexport default Settings;\r\n","import './App.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\n\r\nimport Header from './Header';\r\nimport SensorsList from './SensorsList';\r\nimport { fetchToday } from '../actions';\r\nimport ShowChart from './ShowChart';\r\nimport Settings from './Settings';\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchToday();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <HashRouter>\r\n                    <Route path=\"/\" exact component={SensorsList} />\r\n                    <Route path=\"/chart/temp/:id\" exact component={ShowChart} />\r\n                    <Route path=\"/chart/hum/:id\" exact component={ShowChart} />\r\n                    <Route path=\"/settings\" exact component={Settings} />\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sensor01: state.data.sensor01\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { fetchToday })(App);\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport fetchDayReducer from './fetchDayReducer';\r\nimport sensorNamesReducer from './sensorNamesReducer';\r\n\r\nexport default combineReducers({\r\n    data: fetchDayReducer,\r\n    form: formReducer,\r\n    names: sensorNamesReducer\r\n});","import { FETCH_TODAY } from '../actions/types';\r\n\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_TODAY:\r\n            return { ...state,  ...action.payload }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n","import { FETCH_NAME, POST_NAME } from '../actions/types';\r\n\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_NAME:\r\n            return { ...state,  ...action.payload };\r\n        case POST_NAME:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    };\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))    \r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}