{"version":3,"sources":["api/data.js","actions/index.js","actions/types.js","components/Header.js","components/Sensor.js","components/Card.js","components/SensorsList.js","components/chart.js","history.js","components/Modal.js","components/ShowChart.js","components/App.js","reducers/fetchDayReducer.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","fetchToday","dispatch","a","data","get","response","console","log","type","payload","Header","onFetchClick","props","Fragment","className","style","marginTop","onClick","this","React","Component","connect","Sensor","title","marginBottom","Card","renderMaxTemp","maxTemp","time","renderMinTemp","minTemp","dotColor","id","temp","hum","to","SensorsList","renderData","sensor01","sensor02","tempA","length","tempB","maxTemp01","maxTemp02","minTemp01","minTemp02","renderSensor","map","state","Chart","labels","series","Chartist","Line","showArea","showPoint","onlyInteger","lineSmooth","Interpolation","monotoneCubic","fillHoles","axisX","labelInterpolationFnc","value","index","axisY","offset","createBrowserHistory","Modal","ReactDOM","createPortal","onDismiss","e","stopPropagation","yData","xData","actions","document","querySelector","ShowChart","prepareTempToChart","match","path","params","obj","prepareTimeToChart","renderActions","history","push","App","dataTemp","exact","component","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.d8aa55e4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://young-ocean-79520.herokuapp.com/'\r\n});","import data from '../api/data';\r\nimport { FETCH_TODAY } from './types';\r\n\r\nexport const fetchToday = () => async dispatch => {\r\n    const response = await data.get('/');\r\n    console.log(response);\r\n\r\n    dispatch({ type: FETCH_TODAY, payload: response.data });\r\n};\r\n\r\n","export const FETCH_TODAY = 'FETCH_TODAY';\r\n","import './Header.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchToday } from '../actions';\r\n\r\nclass Header extends React.Component {\r\n    onFetchClick = () => {\r\n        this.props.fetchToday();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h2 className=\"ui center aligned icon header\" style={{ marginTop: '5px'}} >\r\n                <i className=\"chart line icon\"></i>\r\n                    ŻAKA MONITOR\r\n                </h2>\r\n                <div className=\"button-margins\">\r\n                    <button onClick={this.onFetchClick} className=\"ui teal button\">Odśwież</button>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default connect(null, { fetchToday })(Header);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Sensor extends React.Component {\r\n    \r\n\r\n    render() {\r\n        console.log(`SENSOR${this.props.title}`);\r\n        return (\r\n            <React.Fragment>\r\n            <div className=\"item-box item\" style={{marginBottom: '0px'}}>\r\n                <div className=\"content\">\r\n                    {this.props.title}: {this.props.data}\r\n                </div>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\n\r\nexport default connect(null)(Sensor);\r\n","import './Card.css';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n//import { max } from 'moment';\r\n\r\n\r\nexport default class Card extends React.Component {\r\n\r\n\trenderMaxTemp = () => {\r\n\t\tif(this.props.maxTemp) {\r\n\t\t\tvar maxTemp = this.props.maxTemp.maxTemp;\r\n\t\t\tvar time = this.props.maxTemp.time;\r\n\t\t\tconsole.log(this.props.maxTemp.maxTemp);\r\n\t\t\treturn { maxTemp, time }\r\n\t\t}\r\n\r\n\t\treturn 'Loding...'\r\n\t};\r\n\r\n\trenderMinTemp = () => {\r\n\t\tif(this.props.minTemp) {\r\n\t\t\tvar minTemp = this.props.minTemp.minTemp;\r\n\t\t\tvar time = this.props.minTemp.time;\r\n\t\t\tconsole.log(this.props.minTemp.minTemp);\r\n\t\t\treturn { minTemp, time }\r\n\t\t}\r\n\r\n\t\treturn 'Loding...'\r\n\t};\r\n\r\n\tdotColor= () => {\r\n\t\tif(this.props.id === '1') {\r\n\t\t\treturn \"yellow\";\r\n\t\t} else if(this.props.id === '2') {\r\n\t\t\treturn \"blue\"\r\n\t\t}\r\n\t};\r\n\t \r\n\trender() {\r\n\t\tif(this.props.data) {\r\n\t\t\tvar { temp, time, hum } = this.props.data;\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\r\n\t\treturn (\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t<div className=\"right floated mini ui header\">\r\n\t\t\t\t\t\t\t{`${temp} \\u2103`}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"header\">{this.props.title}</div>\r\n\t\t\t\t\t\t<div className=\"meta\">Salon na górze</div>\r\n\t\t\t\t\t\t<div className=\"description\">\r\n\t\t\t\t\t\t\tWilgotność: {`${hum}%`} <br/>\r\n\t\t\t\t\t\t\t<span className=\"max-data\">\r\n\t\t\t\t\t\t\t\tMax: {`${this.renderMaxTemp().maxTemp} \\u2103`} \r\n\t\t\t\t\t\t\t\t<span className=\"time\">o godz: {`${this.renderMaxTemp().time}`} </span><br/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"min-data\">\r\n\t\t\t\t\t\t\t\tMin: {`${this.renderMinTemp().minTemp} \\u2103`} \r\n\t\t\t\t\t\t\t\t<span className=\"time\">o godz: {`${this.renderMinTemp().time}`} </span><br/>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\tCzas: {`${time}`} <br/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"extra content\">\r\n\t\t\t\t\t\t\t<div className=\"right floated top-margin\">\r\n\t\t\t\t\t\t\t\t<Link to={`/chart/temp/${this.props.id}`} className=\"ui purple button\">Wykres</Link>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"left floated\">\r\n\t\t\t\t\t\t\t\t<div className={`dot-${this.dotColor()}`}></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t);\r\n\t};\r\n}\r\n","import './SensorList.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchToday } from '../actions';\r\nimport Sensor from './Sensor';\r\nimport Card from './Card';\r\n\r\nclass SensorsList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchToday();\r\n    };\r\n\r\n    renderData = () => {\r\n        if(this.props.sensor01) {\r\n            const { sensor01, sensor02 } = this.props;\r\n            \r\n            const tempA = sensor01[sensor01.length-1];\r\n            const tempB = sensor02[sensor02.length-1];\r\n            const maxTemp01 = this.props.maxTemp.sensor01;\r\n            const maxTemp02 = this.props.maxTemp.sensor02;\r\n            const minTemp01 = this.props.minTemp.sensor01;\r\n            const minTemp02 = this.props.minTemp.sensor02;\r\n            console.log(maxTemp01);\r\n            console.log(tempB);\r\n            return { tempA, tempB, maxTemp01, maxTemp02, minTemp01, minTemp02 }\r\n        } \r\n        return 'Loading'\r\n    };\r\n\r\n    renderSensor = () => {\r\n        this.props.sensor01.map(data => {\r\n            return (\r\n                <Sensor data={this.renderData()} />\r\n            );\r\n        });\r\n    };\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <div className=\"ui cards\">\r\n                <Card data={this.renderData().tempA} maxTemp={this.renderData().maxTemp01} minTemp={this.renderData().minTemp01} title='Sensor A' id='1' />\r\n                <Card data={this.renderData().tempB} maxTemp={this.renderData().maxTemp02} minTemp={this.renderData().minTemp02} title='Sensor B' id='2' />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        sensor01: state.data.sensor01,\r\n        sensor02: state.data.sensor02,\r\n        maxTemp: state.data.maxTemp,\r\n        minTemp: state.data.minTemp\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchToday })(SensorsList);","import './chart.css';\r\nimport React from 'react';\r\nimport Chartist from 'chartist';\r\n\r\nclass Chart extends React.Component {\r\n    componentDidMount() {\r\n\r\n      console.log(this.props.time);\r\n      console.log(this.props.temp);\r\n      \r\n        var data = {\r\n            // A labels array that can contain any sort of values\r\n            labels: this.props.time,\r\n            // Our series array that contains series objects or in this case series data arrays\r\n            series: [this.props.temp]\r\n          };\r\n\r\n\r\n          new Chartist.Line('.ct-chart', data, {\r\n            //low: 17,\r\n            showArea: false,\r\n            showPoint: false,\r\n            onlyInteger: false,\r\n            lineSmooth: Chartist.Interpolation.monotoneCubic({\r\n              fillHoles: false\r\n            }),\r\n            axisX: {\r\n              labelInterpolationFnc: function(value, index) {\r\n                return index % 10 === 0 ? value : null;\r\n              }\r\n            },\r\n            axisY: {\r\n              offset: 60\r\n            }\r\n          }, [\r\n            ['screen and (max-width: 300px)', {\r\n              axisX: {\r\n                labelInterpolationFnc: function(value, index) {\r\n                  return index % 25 === 0 ? value : null;\r\n                }\r\n              }\r\n            }],\r\n            ['screen and (min-width: 300px)', {\r\n              axisX: {\r\n                labelInterpolationFnc: function(value, index) {\r\n                  return index % 15 === 0 ? value : null;\r\n                }\r\n              }\r\n            }],\r\n            ['screen and (min-width: 600px)', {\r\n              axisX: {\r\n                labelInterpolationFnc: function(value, index) {\r\n                  return index % 10 === 0 ? value : null;\r\n                }\r\n              }\r\n            }]\r\n          ]);\r\n    };\r\n\r\n    componentDidUpdate() {\r\n      console.log(this.props.time);\r\n      console.log(this.props.temp);\r\n      var data = {\r\n        // A labels array that can contain any sort of values\r\n        labels: this.props.time,\r\n        // Our series array that contains series objects or in this case series data arrays\r\n        series: [this.props.temp]\r\n      };\r\n\r\n\r\n      new Chartist.Line('.ct-chart', data, {\r\n        //low: 17,\r\n        showArea: false,\r\n        showPoint: false,\r\n        onlyInteger: false,\r\n        lineSmooth: Chartist.Interpolation.monotoneCubic({\r\n          fillHoles: false\r\n        }),\r\n        axisX: {\r\n          labelInterpolationFnc: function(value, index) {\r\n            return index % 10 === 0 ? value : null;\r\n          }\r\n        },\r\n        axisY: {\r\n          offset: 60\r\n        }\r\n      }, [\r\n        ['screen and (max-width: 300px)', {\r\n          axisX: {\r\n            labelInterpolationFnc: function(value, index) {\r\n              return index % 25 === 0 ? value : null;\r\n            }\r\n          }\r\n        }],\r\n        ['screen and (min-width: 300px)', {\r\n          axisX: {\r\n            labelInterpolationFnc: function(value, index) {\r\n              return index % 15 === 0 ? value : null;\r\n            }\r\n          }\r\n        }],\r\n        ['screen and (min-width: 600px)', {\r\n          axisX: {\r\n            labelInterpolationFnc: function(value, index) {\r\n              return index % 10 === 0 ? value : null;\r\n            }\r\n          }\r\n        }]\r\n      ]);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"chart1\" className=\"ct-chart .ct-golden-section \">\r\n\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Chart;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import './Modal.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Chart from './chart';\r\n\r\nconst Modal = props => {\r\n    const tempTitle = 'Temperatura w \\u2103';\r\n    const humTitle = 'Wilgotność w %';\r\n    console.log(props);\r\n\r\n    return ReactDOM.createPortal(\r\n        <div onClick={props.onDismiss} className=\"ui dimmer modals visible active\">\r\n            <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n                <div className=\"header\">Wykres</div>\r\n                <div className=\"content\">\r\n                    <div className=\"chart-title\">\r\n                        <h4>{props.type === 'temp' ? tempTitle : humTitle}</h4>\r\n                    </div>\r\n                    <Chart temp={props.yData} time={props.xData} />\r\n                </div>\r\n                <div className=\"actions\">\r\n                    {props.actions}\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal')\r\n    );\r\n};\r\n\r\nexport default Modal;","import './ShowChart.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Modal from './Modal';\r\nimport { fetchToday } from '../actions';\r\n\r\nclass ShowChart extends React.Component {\r\n\r\n    prepareTempToChart = () => {\r\n        if(this.props.sensor01) {\r\n            if(this.props.match.path === '/chart/temp/:id') {\r\n\r\n                if(this.props.match.params.id === '1') {\r\n                    console.log('Hello from preapareTemp');\r\n                    let dataTemp = this.props.sensor01.map(obj => obj.temp);\r\n                    //let dataTime = this.props.sensor01.map(obj => obj.time);\r\n        \r\n                    return dataTemp;\r\n                } else if(this.props.match.params.id === '2') {\r\n                    let dataTemp = this.props.sensor02.map(obj => obj.temp);\r\n                    //let dataTime = this.props.sensor02.map(obj => obj.time);\r\n        \r\n                    return dataTemp;\r\n                }\r\n            } else if(this.props.match.path === '/chart/hum/:id') {\r\n\r\n                if(this.props.match.params.id === '1') {\r\n                    console.log('Hello from preapareHum');\r\n                    let dataTemp = this.props.sensor01.map(obj => obj.hum);\r\n                    //let dataTime = this.props.sensor01.map(obj => obj.time);\r\n        \r\n                    return dataTemp;\r\n                } else if(this.props.match.params.id === '2') {\r\n                    let dataTemp = this.props.sensor02.map(obj => obj.hum);\r\n                    //let dataTime = this.props.sensor02.map(obj => obj.time);\r\n        \r\n                    return dataTemp;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    prepareTimeToChart = () => {\r\n        if(this.props.sensor01) {\r\n            if(this.props.match.params.id === '1') {\r\n                let dataTime = this.props.sensor01.map(obj => obj.time);\r\n                \r\n                return dataTime;\r\n            } else if(this.props.match.params.id === '2') {\r\n                let dataTime = this.props.sensor02.map(obj => obj.time);\r\n    \r\n                return dataTime;\r\n            }\r\n        }\r\n    };\r\n\r\n    renderActions() {\r\n        const { id } = this.props.match.params;\r\n\r\n        return (\r\n            <React.Fragment>\r\n\t\t\t    <Link to={`/chart/temp/${this.props.match.params.id}`} className=\"ui purple button\">Temperatura</Link>\r\n\t\t\t    <Link to={`/chart/hum/${this.props.match.params.id}`} className=\"ui purple button\">Wilgotność</Link>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        return (\r\n            <Modal \r\n                xData={this.prepareTimeToChart()}\r\n                yData={this.prepareTempToChart()}\r\n                type={this.props.match.path === '/chart/temp/:id' ? 'temp' : 'hum'}\r\n                actions={this.renderActions()}\r\n                onDismiss={() => this.props.history.push(\"/\")}\r\n            />\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sensor01: state.data.sensor01,\r\n        sensor02: state.data.sensor02\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchToday })(ShowChart);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\n\r\nimport Header from './Header';\r\nimport SensorsList from './SensorsList';\r\nimport { fetchToday } from '../actions';\r\nimport Chart from './chart';\r\nimport history from '../history';\r\nimport ShowChart from './ShowChart';\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchToday();\r\n    };\r\n\r\n    prepareTempToChart = () => {\r\n        if(this.props.sensor01) {\r\n            let dataTemp = this.props.sensor01.map(obj => obj.temp);\r\n            let dataTime = this.props.sensor01.map(obj => obj.time);\r\n            console.log(dataTemp);\r\n            return dataTemp;\r\n        }\r\n    }\r\n\r\n    prepareTimeToChart = () => {\r\n        if(this.props.sensor01) {\r\n            let dataTime = this.props.sensor01.map(obj => obj.time);\r\n            \r\n            return dataTime;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <HashRouter history={history}>\r\n                    <Route path=\"/\" exact component={SensorsList} />\r\n                    <Route path=\"/chart/temp/:id\" exact component={ShowChart} />\r\n                    <Route path=\"/chart/hum/:id\" exact component={ShowChart} />\r\n                </HashRouter>\r\n                \r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sensor01: state.data.sensor01\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { fetchToday })(App);\r\n","import { FETCH_TODAY } from '../actions/types';\r\n\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_TODAY:\r\n            return { ...state,  ...action.payload }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport fetchDayReducer from './fetchDayReducer';\r\n\r\nexport default combineReducers({\r\n    data: fetchDayReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))    \r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}