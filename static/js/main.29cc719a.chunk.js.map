{"version":3,"sources":["../node_modules/react-semantic-ui-datepickers/dist/locales sync /^/.*/.json$","api/covid.js","api/covidPoland.js","api/data.js","actions/index.js","actions/types.js","components/footer-menu-item/FooterMenuItem.js","components/footer-menu/FooterMenu.js","components/Header.js","utils/index.js","components/LoadingComponent.js","components/rechart/Rechart.js","components/history-component/HistoryComponent.js","components/Card.js","components/CardExtended.js","components/CardTempOut.js","components/sensors-list/SensorsList.js","components/Modal.js","components/Settings.js","prepareData.js","components/ChartModal.js","components/ShowChart.js","components/App.js","reducers/index.js","reducers/fetchDayReducer.js","reducers/fetchCovidReducer.js","reducers/sensorNamesReducer.js","reducers/fetchDayByDateReducer.js","reducers/pathReducer.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","axios","create","baseURL","fetchToday","dispatch","a","data","get","response","type","payload","fetchName","postCurrentPath","path","FooterMenuItem","icon","label","className","Icon","name","fitted","size","FooterMenu","to","connect","useSelector","state","history","useHistory","style","marginTop","src","width","height","onClick","trackPromise","push","formatTime","time","moment","format","prepareRechartData","sensorName","isOldData","obj","temp","Number","tempOut","toDate","getTime","dateWithMixedTimeType","firstTempOutDate","firstSensor4Date","date","isBefore","LoadingComponent","display","justifyContent","alignItems","color","Rechart","isHistory","isTempOut","xBegin","subtract","ResponsiveContainer","viewBox","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","strokeFill","XAxis","dataKey","domain","tickFormatter","unixTime","angle","textAnchor","allowDataOverflow","minTickGap","tickCount","tick","fill","tickLine","Tooltip","labelFormatter","labelStyle","Line","stroke","dot","strokeWidth","animationEasing","yAxisId","YAxis","orientation","Legend","verticalAlign","day","names","fetchDayByDate","post","match","useState","isSensor1","isSensor2","isSensor3","isSensor4","values","setValues","showForm","setShowForm","isOldDataFormat","setIsOldDataFormat","showCheckboxes","setShowCheckboxes","promiseInProgress","usePromiseTracker","useEffect","handleDateChange","event","value","isSameOrAfter","as","onChange","filterDate","isAfter","Form","Grid","columns","Column","Field","Checkbox","checked","b","c","textAlign","dividing","sensor01","sensor02","sensor03","sensor04","maxTemp","minTemp","title","renderMaxTemp","renderMinTemp","hum","Card","props","renderDoor","isOpen","renderIsLightOn","isLight","renderTempOutdoor","dotColor","onSettingClick","this","React","Component","today","fetchCovid","covid","fetchCovidPoland","covidPoland","length","CardExtended","CardTempOut","Modal","onSubmit","formValues","body","name1","name2","name3","postName","input","ReactDOM","createPortal","onDismiss","stopPropagation","handleSubmit","component","renderInput","document","querySelector","reduxForm","form","Settings","Fragment","actions","renderActions","tSensor","ySensor","param","mappedTSensor","mappedYSensor","tTime","dataToChart","filter","dataTemp","dataTime","ChartModal","ShowChart","prepareTempToChart","params","prepareData","yesterday","getChartType","getSensorName","xData","yData","App","exact","SensorsList","HistoryComponent","combineReducers","action","world","poland","formReducer","dotenv","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render"],"mappings":"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","file":"static/js/main.29cc719a.chunk.js","sourcesContent":["var map = {\n\t\"./bg-BG.json\": 407,\n\t\"./ca-ES.json\": 408,\n\t\"./cs-CZ.json\": 409,\n\t\"./de-DE.json\": 410,\n\t\"./el-GR.json\": 411,\n\t\"./en-US.json\": 276,\n\t\"./es-ES.json\": 412,\n\t\"./et-EE.json\": 413,\n\t\"./fi-FI.json\": 414,\n\t\"./fr-FR.json\": 415,\n\t\"./he-IL.json\": 416,\n\t\"./it-IT.json\": 417,\n\t\"./ja-JP.json\": 418,\n\t\"./ko-KR.json\": 419,\n\t\"./nb-NO.json\": 420,\n\t\"./nl-NL.json\": 421,\n\t\"./nn-NO.json\": 422,\n\t\"./pl-PL.json\": 423,\n\t\"./pt-BR.json\": 424,\n\t\"./ro-RO.json\": 425,\n\t\"./ru-RU.json\": 426,\n\t\"./sk-SK.json\": 427,\n\t\"./sv-SE.json\": 428,\n\t\"./tr-TR.json\": 429,\n\t\"./zh-CN.json\": 430\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 406;","import axios from 'axios';\r\n\r\nconst url = \"https://coronavirus-19-api.herokuapp.com/all\";\r\nconst general = \"https://corona-virus-stats.herokuapp.com/api/v1/cases/general-stats\";\r\n\r\nexport default axios.create({\r\n    baseURL: url\r\n});","import axios from 'axios';\r\n\r\nconst url = \"https://coronavirus-19-api.herokuapp.com/countries/poland\";\r\n\r\nexport default axios.create({\r\n    baseURL: url\r\n});","import axios from 'axios';\r\n\r\nconst herokuURL = 'https://desolate-tor-57356.herokuapp.com/';\r\nconst localhost = 'http://localhost:8000';\r\nconst renderUrl = 'https://zaka-monitor-api.onrender.com';\r\nconst devRenderUrl = 'https://dev-zaka-monitor-api.onrender.com';\r\n\r\nexport default axios.create({\r\n    baseURL: renderUrl,\r\n});\r\n","import covid from '../api/covid';\r\nimport covidPoland from '../api/covidPoland';\r\nimport data from '../api/data';\r\nimport {\r\n    CURRENT_PATH,\r\n    FETCH_COVID,\r\n    FETCH_COVID_PL,\r\n    FETCH_DAY_BY_DATE,\r\n    FETCH_NAME,\r\n    FETCH_TODAY,\r\n    POST_NAME,\r\n} from './types';\r\n\r\nexport const fetchToday = () => async (dispatch) => {\r\n    const response = await data.get('/');\r\n    dispatch({ type: FETCH_TODAY, payload: response.data });\r\n};\r\n\r\nexport const fetchName = () => async (dispatch) => {\r\n    const response = await data.get('/sensor');\r\n\r\n    dispatch({ type: FETCH_NAME, payload: response.data });\r\n};\r\n\r\nexport const fetchDayByDate = (date) => async (dispatch) => {\r\n    const response = await data.post('/day', { date });\r\n    dispatch({ type: FETCH_DAY_BY_DATE, payload: response.data });\r\n};\r\n\r\nexport const postName = (formValues) => async (dispatch) => {\r\n    const response = await data.post('/sensor', formValues);\r\n\r\n    dispatch({ type: POST_NAME, payload: response.data });\r\n};\r\n\r\nexport const fetchCovid = () => async (dispatch) => {\r\n    const response = await covid.get('/');\r\n\r\n    dispatch({ type: FETCH_COVID, payload: response.data });\r\n};\r\n\r\nexport const fetchCovidPoland = () => async (dispatch) => {\r\n    const response = await covidPoland.get('/');\r\n\r\n    dispatch({ type: FETCH_COVID_PL, payload: response.data });\r\n};\r\n\r\nexport const postCurrentPath = (path) => async (dispatch) => {\r\n    dispatch({ type: CURRENT_PATH, payload: path });\r\n};\r\n","export const FETCH_TODAY = 'FETCH_TODAY';\r\nexport const SENSOR_NAME = 'SENSOR_NAME';\r\nexport const FETCH_NAME = 'FETCH_NAME';\r\nexport const POST_NAME = 'POST_NAME';\r\nexport const FETCH_COVID = 'FETCH_COVID';\r\nexport const FETCH_COVID_PL = 'FETCH_COVID_PL';\r\nexport const FETCH_DAY_BY_DATE = 'FETCH_DAY_BY_DATE';\r\nexport const CURRENT_PATH = 'CURRENT_PATH';\r\n","import React from 'react';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport './FooterMenuItem.css';\r\n\r\nconst FooterMenuItem = ({ icon, label }) => {\r\n    return (\r\n        <div className={'footer-menu-item'}>\r\n            <Icon name={icon} fitted={true} size={'large'} />\r\n            {/* <div className={'label'}>{label}</div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FooterMenuItem;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport FooterMenuItem from '../footer-menu-item/FooterMenuItem';\r\nimport './FooterMenu.css';\r\n\r\nconst FooterMenu = ({}) => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <Link to={'/history'}>\r\n                <FooterMenuItem icon={'history'} label={'historia'} />\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FooterMenu;\r\n","import React from 'react';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport { fetchToday, postCurrentPath } from '../actions';\r\nimport './Header.css';\r\n\r\nconst Header = ({ fetchToday, postCurrentPath }) => {\r\n    const path = useSelector((state) => state.path);\r\n    const history = useHistory();\r\n\r\n    const onFetchClick = () => {\r\n        trackPromise(fetchToday());\r\n    };\r\n\r\n    const onBackClick = () => {\r\n        history.push('/');\r\n        postCurrentPath('/');\r\n    };\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <h2 className=\"ui center aligned header font\" style={{ marginTop: '5px' }}>\r\n                <div className=\"image-header\">\r\n                    <img src=\"./zaka-monitor-logo.png\" width={150} height={91} />\r\n                </div>\r\n                ZAKA MONITOR\r\n            </h2>\r\n            <div className=\"button-margins\">\r\n                {path !== '/history' ? (\r\n                    <button onClick={onFetchClick} className=\"ui green button\">\r\n                        <i className=\"sync icon large u-mr\"></i>\r\n                    </button>\r\n                ) : (\r\n                    <button onClick={onBackClick} className=\"ui gray button\">\r\n                        <Icon name={'backward'} size={'large'} fitted />\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(null, { fetchToday, postCurrentPath })(Header);\r\n","import moment from 'moment';\r\n\r\nexport const formatTime = (time) => moment(time).format('HH:mm');\r\n\r\nexport const prepareRechartData = (data, sensorName, isOldData) => {\r\n    return data.map((obj) => {\r\n        if (sensorName === 'sensor03') {\r\n            return {\r\n                ...obj,\r\n                temp: Number(obj.temp),\r\n                tempOut: Number(obj.tempOut),\r\n                time: isOldData ? moment(obj.time, 'HH:mm').toDate().getTime() : moment(obj.time).toDate().getTime(),\r\n            };\r\n        } else {\r\n            return {\r\n                ...obj,\r\n                temp: Number(obj.temp),\r\n                time: isOldData ? moment(obj.time, 'HH:mm').toDate().getTime() : moment(obj.time).toDate().getTime(),\r\n            };\r\n        }\r\n    });\r\n};\r\n\r\nexport const dateWithMixedTimeType = moment('23.12.2022', 'DD.MM.YYYY');\r\nexport const firstTempOutDate = moment('13.06.2020', 'DD.MM.YYYY');\r\nexport const firstSensor4Date = moment('27.12.2022', 'DD.MM.YYYY');\r\n\r\nexport const isOldData = (date) => moment(date, 'DD.MM.YYYY').isBefore(dateWithMixedTimeType);\r\n\r\nexport const textColor = '#aeb1ba';\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport const LoadingComponent = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"100%\",\r\n                height: \"100\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"30%\",\r\n            }}\r\n        >\r\n            <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\r\n        </div>\r\n    );\r\n};\r\n","import moment from 'moment';\r\nimport React from 'react';\r\n// import './index.css';\r\n\r\nimport { CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\n\r\nexport const Rechart = ({ data, type, isHistory = false, isTempOut = false }) => {\r\n    const xBegin = isHistory ? 'dataMin' : moment().subtract(1, 'days').toDate().getTime();\r\n    const tickColor = '#aeb1ba';\r\n\r\n    return (\r\n        <div>\r\n            <ResponsiveContainer width=\"100%\" height={200} viewBox={'10 0 320 200'}>\r\n                <LineChart\r\n                    margin={{ top: 20, right: 1, left: -10, bottom: 11 }}\r\n                    data={data}\r\n                    viewBox={'10 0 320 200'}\r\n                    className={'u-color-chart'}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" strokeFill={tickColor} />\r\n                    <XAxis\r\n                        dataKey=\"time\"\r\n                        domain={[xBegin, 'dataMax']}\r\n                        name=\"Time\"\r\n                        tickFormatter={(unixTime) => moment(unixTime).format('HH:mm')}\r\n                        type=\"number\"\r\n                        angle={-50}\r\n                        textAnchor={'end'}\r\n                        allowDataOverflow={true}\r\n                        minTickGap={2}\r\n                        tickCount={6}\r\n                        tick={{ fill: tickColor, tickLine: tickColor }}\r\n                    />\r\n                    <Tooltip\r\n                        labelFormatter={(unixTime) => moment(unixTime).format('HH:mm')}\r\n                        labelStyle={{ 'font-weight': 'bold' }}\r\n                    />\r\n                    <Line\r\n                        type=\"natural\"\r\n                        dataKey={type}\r\n                        stroke=\"#8884d8\"\r\n                        dot={false}\r\n                        strokeWidth={2}\r\n                        animationEasing={'ease-in-out'}\r\n                        name={type}\r\n                        yAxisId={'yTemp'}\r\n                    />\r\n                    {isHistory && !isTempOut && (\r\n                        <>\r\n                            <Line\r\n                                type=\"natural\"\r\n                                dataKey={'hum'}\r\n                                stroke=\"#54a0ff\"\r\n                                dot={false}\r\n                                strokeWidth={2}\r\n                                animationEasing={'ease-in-out'}\r\n                                name={'hum'}\r\n                                yAxisId={'yHum'}\r\n                            />\r\n                            <YAxis\r\n                                yAxisId={'yHum'}\r\n                                orientation={'right'}\r\n                                domain={['dataMin', 'dataMax']}\r\n                                type={'number'}\r\n                                tick={{ fill: tickColor, tickLine: tickColor }}\r\n                            />\r\n                            <Legend verticalAlign=\"top\" height={36} />\r\n                        </>\r\n                    )}\r\n                    <YAxis\r\n                        yAxisId={'yTemp'}\r\n                        orientation={'left'}\r\n                        domain={['dataMin', 'dataMax']}\r\n                        type={'number'}\r\n                        tick={{ fill: tickColor, tickLine: tickColor }}\r\n                    />\r\n                </LineChart>\r\n            </ResponsiveContainer>\r\n        </div>\r\n    );\r\n};\r\n","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\r\nimport { connect } from 'react-redux';\r\nimport SemanticDatepicker from 'react-semantic-ui-datepickers';\r\nimport 'react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css';\r\nimport { Checkbox, Form, Grid, Header } from 'semantic-ui-react';\r\nimport { fetchDayByDate, fetchName, postCurrentPath } from '../../actions';\r\nimport { firstSensor4Date, firstTempOutDate, isOldData, prepareRechartData } from '../../utils';\r\nimport { LoadingComponent } from '../LoadingComponent';\r\nimport { Rechart } from '../rechart/Rechart';\r\nimport './HistoryComponent.css';\r\n\r\nconst HistoryComponent = ({ fetchDayByDate, postCurrentPath, day, names, match }) => {\r\n    const [values, setValues] = useState({\r\n        isSensor1: false,\r\n        isSensor2: false,\r\n        isSensor3: false,\r\n        isTempOut: false,\r\n        isSensor4: false,\r\n    });\r\n    const [showForm, setShowForm] = useState(false);\r\n    const [isOldDataFormat, setIsOldDataFormat] = useState(false);\r\n    const [showCheckboxes, setShowCheckboxes] = useState({\r\n        isSensor1: false,\r\n        isSensor2: false,\r\n        isSensor3: false,\r\n        isTempOut: false,\r\n        isSensor4: false,\r\n    });\r\n\r\n    const { promiseInProgress } = usePromiseTracker();\r\n\r\n    useEffect(() => {\r\n        postCurrentPath(match.path);\r\n    }, []);\r\n\r\n    const handleDateChange = async (event, data) => {\r\n        if (isOldData(data.value)) setIsOldDataFormat(true);\r\n        else setIsOldDataFormat(false);\r\n\r\n        await trackPromise(fetchDayByDate(moment(data.value).format('D.M.YYYY')));\r\n        setShowForm(true);\r\n        setShowCheckboxes({\r\n            isSensor1: true,\r\n            isSensor2: true,\r\n            isSensor3: moment(data.value).isSameOrAfter(firstTempOutDate),\r\n            isTempOut: moment(data.value).isSameOrAfter(firstTempOutDate),\r\n            isSensor4: moment(data.value).isSameOrAfter(firstSensor4Date),\r\n        });\r\n    };\r\n\r\n    if (!names.a) return null;\r\n\r\n    return promiseInProgress ? (\r\n        <LoadingComponent />\r\n    ) : (\r\n        <div className=\"layout u-mt\">\r\n            <Header as={'h2'} className={'u-text-color layout'}>\r\n                <span className=\"u-mt-l\">Historia</span>\r\n            </Header>\r\n            <SemanticDatepicker\r\n                onChange={handleDateChange}\r\n                filterDate={(date) =>\r\n                    moment(date).isAfter('2019-12-23', 'YYYY-MM-DD') && moment(date).isBefore(moment())\r\n                }\r\n            />\r\n            {showForm && (\r\n                <Form className=\"font-stylesd u-mt u-text-color\">\r\n                    <Grid columns={'equal'}>\r\n                        <Grid.Column>\r\n                            <Form.Field>\r\n                                <Checkbox\r\n                                    label={names.a.name}\r\n                                    name=\"sensor1\"\r\n                                    value={values.isSensor1}\r\n                                    checked={values.isSensor1 === true}\r\n                                    onChange={(e, data) => setValues({ ...values, isSensor1: !values.isSensor1 })}\r\n                                    className={'u-text-color'}\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Checkbox\r\n                                    label={names.b.name}\r\n                                    name=\"sensor2\"\r\n                                    value={values.isSensor2}\r\n                                    checked={values.isSensor2 === true}\r\n                                    onChange={(e, data) => setValues({ ...values, isSensor2: !values.isSensor2 })}\r\n                                />\r\n                            </Form.Field>\r\n                        </Grid.Column>\r\n                        {showCheckboxes.isTempOut && (\r\n                            <Grid.Column>\r\n                                <Form.Field>\r\n                                    <Checkbox\r\n                                        label=\"Garaż\"\r\n                                        name=\"sensor3\"\r\n                                        value={values.isSensor3}\r\n                                        checked={values.isSensor3 === true}\r\n                                        onChange={(e, data) => setValues({ ...values, isSensor3: !values.isSensor3 })}\r\n                                    />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <Checkbox\r\n                                        label=\"Na zewnątrz\"\r\n                                        name=\"tempOut\"\r\n                                        value={values.isTempOut}\r\n                                        checked={values.isTempOut === true}\r\n                                        onChange={(e, data) => setValues({ ...values, isTempOut: !values.isTempOut })}\r\n                                    />\r\n                                </Form.Field>\r\n                            </Grid.Column>\r\n                        )}\r\n                        {showCheckboxes.isSensor4 && (\r\n                            <Grid.Column>\r\n                                <Form.Field>\r\n                                    <Checkbox\r\n                                        label={names.c.name}\r\n                                        name=\"sensor4\"\r\n                                        value={values.isSensor4}\r\n                                        checked={values.isSensor4 === true}\r\n                                        onChange={(e, data) => setValues({ ...values, isSensor4: !values.isSensor4 })}\r\n                                    />\r\n                                </Form.Field>\r\n                            </Grid.Column>\r\n                        )}\r\n                    </Grid>\r\n                </Form>\r\n            )}\r\n            <div className=\"rechart-container u-mt\">\r\n                {values.isSensor1 && (\r\n                    <>\r\n                        <Header textAlign={'center'} dividing={true} className={'u-mb-non'}>\r\n                            {names.a.name}\r\n                        </Header>\r\n                        <Rechart\r\n                            data={prepareRechartData(day.sensor01, 'sensor01', isOldDataFormat)}\r\n                            type={'temp'}\r\n                            isHistory={true}\r\n                        />\r\n                    </>\r\n                )}\r\n                {values.isSensor2 && (\r\n                    <>\r\n                        <Header textAlign={'center'} dividing={true} className={'u-mb-non'}>\r\n                            {names.b.name}\r\n                        </Header>\r\n                        <Rechart\r\n                            data={prepareRechartData(day.sensor02, 'sensor02', isOldDataFormat)}\r\n                            type={'temp'}\r\n                            isHistory={true}\r\n                        />\r\n                    </>\r\n                )}\r\n                {values.isSensor3 && showCheckboxes.isSensor3 && (\r\n                    <>\r\n                        <Header textAlign={'center'} dividing={true} className={'u-mb-non'}>\r\n                            Garaż\r\n                        </Header>\r\n                        <Rechart\r\n                            data={prepareRechartData(day.sensor03, 'sensor03', isOldDataFormat)}\r\n                            type={'temp'}\r\n                            isHistory={true}\r\n                        />\r\n                    </>\r\n                )}\r\n                {values.isSensor4 && showCheckboxes.isSensor4 && (\r\n                    <>\r\n                        <Header textAlign={'center'} dividing={true} className={'u-mb-non'}>\r\n                            {names.c.name}\r\n                        </Header>\r\n                        <Rechart\r\n                            data={prepareRechartData(day.sensor04, 'sensor04', isOldDataFormat)}\r\n                            type={'temp'}\r\n                            isHistory={true}\r\n                        />\r\n                    </>\r\n                )}\r\n                {values.isTempOut && showCheckboxes.isTempOut && (\r\n                    <>\r\n                        <Header textAlign={'center'} dividing={true} className={'u-mb-non'}>\r\n                            Na zewnątrz\r\n                        </Header>\r\n                        <div className=\"u-mr\">\r\n                            <Rechart\r\n                                data={prepareRechartData(day.sensor03, 'sensor03', isOldDataFormat)}\r\n                                type={'tempOut'}\r\n                                isHistory={true}\r\n                                isTempOut\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n            <div className=\"empty-space-large\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        day: state.day,\r\n        names: state.names,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchDayByDate, fetchName, postCurrentPath })(HistoryComponent);\r\n","import moment from 'moment';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchName } from '../actions';\r\nimport { formatTime } from '../utils';\r\nimport './Card.css';\r\n\r\nconst Card = ({ data, maxTemp, minTemp, title, id, history, name }) => {\r\n    const renderMaxTemp = (temp) => {\r\n        if (temp) {\r\n            const maxTemp = temp.maxTemp;\r\n            const time = moment(temp.time).format('HH:mm');\r\n            return { maxTemp, time };\r\n        }\r\n\r\n        return 'Loading...';\r\n    };\r\n\r\n    const renderMinTemp = (temp) => {\r\n        if (temp) {\r\n            const minTemp = temp.minTemp;\r\n            const time = moment(temp.time).format('HH:mm');\r\n            return { minTemp, time };\r\n        }\r\n\r\n        return 'Loding...';\r\n    };\r\n\r\n    const dotColor = () => {\r\n        if (id === '1') {\r\n            return 'yellow';\r\n        } else if (id === '2') {\r\n            return 'blue';\r\n        } else if (id === '5') {\r\n            return 'purple';\r\n        }\r\n    };\r\n\r\n    const onSettingClick = () => {\r\n        history.push('/settings');\r\n    };\r\n\r\n    if (data) {\r\n        var { temp, time, hum } = data;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card background-color\">\r\n                <div className=\"content\">\r\n                    <div className=\"right floated mini ui header\">\r\n                        <span className=\"temp-header\">{temp ? `${temp} \\u2103` : '----'}</span>\r\n                    </div>\r\n                    <div className=\"header\">{name}</div>\r\n                    <div className=\"meta\">ID czujnika: {id}</div>\r\n                    <div className=\"description\">\r\n                        Wilgotność: {hum ? `${hum}%` : '--'} <br />\r\n                        <span className=\"max-data\">\r\n                            Max: {renderMaxTemp(maxTemp).maxTemp ? `${renderMaxTemp(maxTemp).maxTemp} \\u2103` : '--'}\r\n                            <span className=\"time\">\r\n                                o godz: {renderMaxTemp(maxTemp).time ? `${renderMaxTemp(maxTemp).time}` : '--:--'}{' '}\r\n                            </span>\r\n                            <br />\r\n                        </span>\r\n                        <span className=\"min-data\">\r\n                            Min: {renderMinTemp(minTemp).minTemp ? `${renderMinTemp(minTemp).minTemp} \\u2103` : '--'}\r\n                            <span className=\"time\">\r\n                                o godz: {renderMinTemp(minTemp).time ? `${renderMinTemp(minTemp).time}` : '--:--'}{' '}\r\n                            </span>\r\n                            <br />\r\n                        </span>\r\n                        Czas: {`${formatTime(time)}`} <br />\r\n                    </div>\r\n                    <div className=\"extra content\">\r\n                        <div className=\"right floated top-margin\">\r\n                            <Link to={`/chart/temp/${id}`} className=\"ui green button\">\r\n                                Wykres\r\n                            </Link>\r\n                        </div>\r\n                        <div onClick={onSettingClick} className=\"left floated\">\r\n                            <div className={`dot-${dotColor()}`}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        names: state.names,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchName })(Card);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { formatTime } from '../utils';\r\nimport './Card.css';\r\n\r\nclass Card extends React.Component {\r\n    renderMaxTemp = () => {\r\n        if (this.props.maxTemp) {\r\n            var maxTemp = this.props.maxTemp.maxTemp;\r\n            var time = formatTime(this.props.maxTemp.time);\r\n            return { maxTemp, time };\r\n        }\r\n\r\n        return 'Loading...';\r\n    };\r\n\r\n    renderMinTemp = () => {\r\n        if (this.props.minTemp) {\r\n            var minTemp = this.props.minTemp.minTemp;\r\n            var time = formatTime(this.props.minTemp.time);\r\n            return { minTemp, time };\r\n        }\r\n\r\n        return 'Loding...';\r\n    };\r\n\r\n    renderDoor = () => {\r\n        if (this.props.data) return this.props.data.isOpen ? 'otwarte' : 'zamknięte';\r\n    };\r\n\r\n    renderIsLightOn = () => {\r\n        if (this.props.data) {\r\n            return this.props.data.isLight ? 'ON' : 'OFF';\r\n        }\r\n    };\r\n\r\n    renderTempOutdoor = () => {\r\n        if (this.props.data) {\r\n            return this.props.data.tempOut;\r\n        }\r\n    };\r\n\r\n    dotColor = () => {\r\n        if (this.props.id === '1') {\r\n            return 'yellow';\r\n        } else if (this.props.id === '2') {\r\n            return 'blue';\r\n        } else if (this.props.id === '3') {\r\n            return 'black';\r\n        }\r\n    };\r\n\r\n    onSettingClick = () => {\r\n        this.props.history.push('/settings');\r\n    };\r\n\r\n    render() {\r\n        if (this.props.data) {\r\n            var { temp, time, hum } = this.props.data;\r\n        }\r\n\r\n        return (\r\n            <div className=\"card background-color\">\r\n                <div className=\"content\">\r\n                    <div className=\"right floated mini ui header\">\r\n                        <span className=\"temp-header\">{`${temp} \\u2103`}</span>\r\n                    </div>\r\n                    <div className=\"header\">Garaż</div>\r\n                    <div className=\"meta\">ID czujnika: {this.props.id}</div>\r\n                    <div className=\"description\">\r\n                        Wilgotność: {`${hum}%`} <br />\r\n                        <span className=\"max-data\">\r\n                            Max: {`${this.renderMaxTemp().maxTemp} \\u2103`}\r\n                            <span className=\"time\">o godz: {`${this.renderMaxTemp().time}`} </span>\r\n                            <br />\r\n                        </span>\r\n                        <span className=\"min-data\">\r\n                            Min: {`${this.renderMinTemp().minTemp} \\u2103`}\r\n                            <span className=\"time\">o godz: {`${this.renderMinTemp().time}`} </span>\r\n                            <br />\r\n                        </span>\r\n                        Drzwi: {this.renderDoor()} <br />\r\n                        Światło: {this.renderIsLightOn()} <br />\r\n                        Czas: {`${formatTime(time)}`} <br />\r\n                    </div>\r\n                    <div className=\"extra content\">\r\n                        <div className=\"right floated top-margin\">\r\n                            <Link to={`/chart/temp/${this.props.id}`} className=\"ui green button\">\r\n                                Wykres\r\n                            </Link>\r\n                        </div>\r\n                        <div onClick={this.onSettingClick} className=\"left floated\">\r\n                            <div className={`dot-${this.dotColor()}`}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        names: state.names,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Card);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { formatTime } from '../utils';\r\nimport './Card.css';\r\n\r\nclass Card extends React.Component {\r\n    renderMaxTemp = () => {\r\n        if (this.props.maxTemp) {\r\n            var maxTemp = this.props.maxTemp.maxTemp;\r\n            var time = formatTime(this.props.maxTemp.time);\r\n            return { maxTemp, time };\r\n        }\r\n\r\n        return 'Loading...';\r\n    };\r\n\r\n    renderMinTemp = () => {\r\n        if (this.props.minTemp) {\r\n            var minTemp = this.props.minTemp.minTemp;\r\n            var time = formatTime(this.props.minTemp.time);\r\n            return { minTemp, time };\r\n        }\r\n\r\n        return 'Loding...';\r\n    };\r\n\r\n    dotColor = () => {\r\n        if (this.props.id === '1') {\r\n            return 'yellow';\r\n        } else if (this.props.id === '2') {\r\n            return 'blue';\r\n        } else if (this.props.id === '3' || this.props.id === '4') {\r\n            return 'black';\r\n        }\r\n    };\r\n\r\n    onSettingClick = () => {\r\n        this.props.history.push('/settings');\r\n    };\r\n\r\n    render() {\r\n        if (this.props.data) {\r\n            var { tempOut, time } = this.props.data;\r\n        }\r\n\r\n        return (\r\n            <div className=\"card background-color\">\r\n                <div className=\"content\">\r\n                    <div className=\"right floated mini ui header\">\r\n                        <span className=\"temp-header\">{`${tempOut} \\u2103`}</span>\r\n                    </div>\r\n                    <div className=\"header\">Na zewnątrz:</div>\r\n                    <div className=\"meta\">ID czujnika: {this.props.id}</div>\r\n                    <div className=\"description\">\r\n                        <span className=\"max-data\">\r\n                            Max: {this.renderMaxTemp().maxTemp ? `${this.renderMaxTemp().maxTemp} \\u2103` : '--'}\r\n                            <span className=\"time\">o godz: {`${this.renderMaxTemp().time}`} </span>\r\n                            <br />\r\n                        </span>\r\n                        <span className=\"min-data\">\r\n                            Min: {this.renderMinTemp().minTemp ? `${this.renderMinTemp().minTemp} \\u2103` : '--'}\r\n                            <span className=\"time\">\r\n                                o godz: {this.renderMinTemp().time ? `${this.renderMinTemp().time}` : '--:--'}{' '}\r\n                            </span>\r\n                            <br />\r\n                        </span>\r\n                        Czas: {`${formatTime(time)}`} <br />\r\n                    </div>\r\n                    <div className=\"extra content\">\r\n                        <div className=\"right floated top-margin\">\r\n                            <Link to={`/chart/temp/${this.props.id}`} className=\"ui green button\">\r\n                                Wykres\r\n                            </Link>\r\n                        </div>\r\n                        <div onClick={this.onSettingClick} className=\"left floated\">\r\n                            <div className={`dot-${this.dotColor()}`}></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        names: state.names,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Card);\r\n","import React, { useEffect } from 'react';\r\nimport { trackPromise, usePromiseTracker } from 'react-promise-tracker';\r\nimport { connect } from 'react-redux';\r\nimport { fetchCovid, fetchCovidPoland, fetchName, fetchToday } from '../../actions';\r\nimport Card from '../Card';\r\nimport CardExtended from '../CardExtended';\r\nimport CardTempOut from '../CardTempOut';\r\nimport { LoadingComponent } from '../LoadingComponent';\r\nimport './SensorList.css';\r\n\r\nconst SensorsList = ({\r\n    sensor01,\r\n    sensor02,\r\n    sensor03,\r\n    sensor04,\r\n    fetchToday,\r\n    fetchName,\r\n    maxTemp,\r\n    minTemp,\r\n    names,\r\n    history,\r\n}) => {\r\n    const { promiseInProgress } = usePromiseTracker();\r\n    useEffect(() => {\r\n        trackPromise(fetchToday());\r\n        fetchName();\r\n    }, []);\r\n\r\n    if (!maxTemp || !names.a) return null;\r\n\r\n    return (\r\n        <>\r\n            {promiseInProgress ? (\r\n                <LoadingComponent />\r\n            ) : (\r\n                <div className=\"ui cards\">\r\n                    <Card\r\n                        data={sensor01[sensor01.length - 1]}\r\n                        maxTemp={maxTemp.sensor01}\r\n                        minTemp={minTemp.sensor01}\r\n                        title=\"Sensor A\"\r\n                        id=\"1\"\r\n                        history={history}\r\n                        name={names.a.name}\r\n                    />\r\n                    <Card\r\n                        data={sensor02[sensor02.length - 1]}\r\n                        maxTemp={maxTemp.sensor02}\r\n                        minTemp={minTemp.sensor02}\r\n                        title=\"Sensor B\"\r\n                        id=\"2\"\r\n                        history={history}\r\n                        name={names.b.name}\r\n                    />\r\n                    <CardExtended\r\n                        data={sensor03[sensor03.length - 1]}\r\n                        maxTemp={maxTemp.sensor03}\r\n                        minTemp={minTemp.sensor03}\r\n                        title=\"Sensor C\"\r\n                        id=\"3\"\r\n                        history={history}\r\n                        name=\"Garaz\"\r\n                    />\r\n                    <CardTempOut\r\n                        data={sensor03[sensor03.length - 1]}\r\n                        maxTemp={maxTemp.tempOut}\r\n                        minTemp={minTemp.tempOut}\r\n                        id=\"4\"\r\n                        history={history}\r\n                    />\r\n                    <Card\r\n                        data={sensor04[sensor04.length - 1]}\r\n                        maxTemp={maxTemp.sensor04}\r\n                        minTemp={minTemp.sensor04}\r\n                        title=\"Sensor B\"\r\n                        id=\"5\"\r\n                        history={history}\r\n                        name={names.c.name}\r\n                        className={'u-mb'}\r\n                    />\r\n                    <div className=\"empty-space\"></div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    if (state.data.today) {\r\n        return {\r\n            sensor01: state.data.today.sensor01,\r\n            sensor02: state.data.today.sensor02,\r\n            sensor03: state.data.today.sensor03,\r\n            sensor04: state.data.today.sensor04,\r\n            maxTemp: state.data.today.maxTemp,\r\n            minTemp: state.data.today.minTemp,\r\n            names: state.names,\r\n        };\r\n    } else {\r\n        return {\r\n            names: state.names,\r\n        };\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchToday,\r\n    fetchName,\r\n    fetchCovid,\r\n    fetchCovidPoland,\r\n})(SensorsList);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nimport { postName } from '../actions';\r\n\r\nclass Modal extends React.Component {\r\n    renderInput({ input, label }) {\r\n        return (\r\n            <div className=\"field\">\r\n                <label>{label}</label>\r\n                <input {...input} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = async (formValues) => {\r\n        const body = {\r\n            name1: formValues.name1 ? formValues.name1 : this.props.names.a.name,\r\n            name2: formValues.name2 ? formValues.name2 : this.props.names.b.name,\r\n            name3: formValues.name3 ? formValues.name3 : this.props.names.c.name,\r\n        };\r\n        await this.props.postName(body);\r\n\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(\r\n            <div onClick={this.props.onDismiss} className=\"ui dimmer modals visible active\">\r\n                <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n                    <div className=\"header\">Zmień nazwę czujnika</div>\r\n                    <div className=\"content\">\r\n                        <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form\">\r\n                            <Field name=\"name1\" component={this.renderInput} label=\"Nazwa czujnika 1:\" />\r\n                            <Field name=\"name2\" component={this.renderInput} label=\"Nazwa czujnika 2:\" />\r\n                            <Field name=\"name3\" component={this.renderInput} label=\"Nazwa czujnika 3:\" />\r\n                            <div className=\"actions\">\r\n                                <button className=\"ui black button\">Zapisz</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>,\r\n            document.querySelector('#modal'),\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'sensorsNames',\r\n})(connect(null, { postName })(Modal));\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchName } from '../actions';\r\n\r\nimport Modal from './Modal';\r\n\r\nclass Settings extends React.Component {\r\n    renderActions() {\r\n        return (\r\n            <React.Fragment>\r\n                <Link to={`/`} onClick={this.props.onSubmit} className=\"ui black button\">\r\n                    Zapisz\r\n                </Link>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal\r\n                actions={this.renderActions()}\r\n                onDismiss={() => this.props.history.push('/')}\r\n                history={this.props.history}\r\n                names={this.props.names}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    if (state.data.names) {\r\n        return {\r\n            names: state.names,\r\n        };\r\n    } else {\r\n        return {\r\n            names: state.names,\r\n        };\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    fetchName,\r\n})(Settings);\r\n","import moment from 'moment';\r\n\r\nexport default (tSensor, ySensor, param) => {\r\n    const mappedTSensor = tSensor.map((obj) => {\r\n        if (obj.time.length > 5) {\r\n            return { ...obj, time: moment(obj.time).format('HH:mm') };\r\n        } else {\r\n            return obj;\r\n        }\r\n    });\r\n\r\n    const mappedYSensor = ySensor.map((obj) => {\r\n        if (obj.time.length > 5) {\r\n            return { ...obj, time: moment(obj.time).format('HH:mm') };\r\n        } else {\r\n            return obj;\r\n        }\r\n    });\r\n\r\n    const current = mappedTSensor[mappedTSensor.length - 1];\r\n    const tTime = current.time;\r\n\r\n    let dataToChart = mappedYSensor.filter((obj) => obj.time > tTime);\r\n    dataToChart = [...dataToChart, ...mappedTSensor];\r\n\r\n    const dataTemp = dataToChart.map((obj) => obj[param]);\r\n    const dataTime = dataToChart.map((obj) => obj.time);\r\n\r\n    return { dataTemp, dataTime };\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './ChartModal.css';\r\nimport { Rechart } from './rechart/Rechart';\r\n\r\nconst ChartModal = ({ data, type, actions, onDismiss }) => {\r\n    const tempTitle = 'Temperatura w \\u2103';\r\n    const humTitle = 'Wilgotność w %';\r\n\r\n    return ReactDOM.createPortal(\r\n        <div onClick={onDismiss} className=\"ui dimmer modals visible active\">\r\n            <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\r\n                <div className=\"header\">Wykres - ostatnie 24h</div>\r\n                <div className=\"content\">\r\n                    <div className=\"chart-title\">\r\n                        <h4>{type === 'temp' || type === 'tempOut' ? tempTitle : humTitle}</h4>\r\n                    </div>\r\n                    <Rechart data={data} type={type} />\r\n                </div>\r\n                <div className=\"actions\">{actions}</div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector('#modal'),\r\n    );\r\n};\r\n\r\nexport default ChartModal;\r\n\r\n{\r\n    /* <Modal\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            // trigger={<Button>Wykres</Button>}\r\n        >\r\n            <Modal.Header>Select a Photo</Modal.Header>\r\n            <Modal.Content image>\r\n                <Rechart data={props.data} />\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n                <Button color=\"green\" onClick={() => setOpen(false)}>\r\n                    Wilgotność\r\n                </Button>\r\n                <Button content=\"Temperatura\" onClick={() => setOpen(false)} color={'green'} />\r\n            </Modal.Actions>\r\n        </Modal> */\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchToday } from '../actions';\r\nimport prepareData from '../prepareData';\r\nimport { isOldData, prepareRechartData } from '../utils';\r\nimport ChartModal from './ChartModal';\r\nimport './ShowChart.css';\r\n\r\nclass ShowChart extends React.Component {\r\n    prepareTempToChart = () => {\r\n        if (this.props.today) {\r\n            if (this.props.match.path === '/chart/temp/:id') {\r\n                if (this.props.match.params.id === '1') {\r\n                    return prepareData(this.props.today.sensor01, this.props.yesterday.sensor01, 'temp');\r\n                } else if (this.props.match.params.id === '2') {\r\n                    return prepareData(this.props.today.sensor02, this.props.yesterday.sensor02, 'temp');\r\n                } else if (this.props.match.params.id === '3') {\r\n                    return prepareData(this.props.today.sensor03, this.props.yesterday.sensor03, 'temp');\r\n                } else if (this.props.match.params.id === '4') {\r\n                    return prepareData(this.props.today.sensor03, this.props.yesterday.sensor03, 'tempOut');\r\n                }\r\n            } else if (this.props.match.path === '/chart/hum/:id') {\r\n                if (this.props.match.params.id === '1') {\r\n                    return prepareData(this.props.today.sensor01, this.props.yesterday.sensor01, 'hum');\r\n                } else if (this.props.match.params.id === '2') {\r\n                    return prepareData(this.props.today.sensor02, this.props.yesterday.sensor02, 'hum');\r\n                } else if (this.props.match.params.id === '3') {\r\n                    return prepareData(this.props.today.sensor03, this.props.yesterday.sensor03, 'hum');\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    renderActions() {\r\n        if (this.props.match.params.id === '4') {\r\n            return (\r\n                <React.Fragment>\r\n                    <Link to=\"/\" className=\"ui green button\">\r\n                        Wróć\r\n                    </Link>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <Link to={`/chart/temp/${this.props.match.params.id}`} className=\"ui green button\">\r\n                    Temperatura\r\n                </Link>\r\n                <Link to={`/chart/hum/${this.props.match.params.id}`} className=\"ui green button\">\r\n                    Wilgotność\r\n                </Link>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    getChartType = () => {\r\n        return this.props.match.path === '/chart/hum/:id'\r\n            ? 'hum'\r\n            : this.props.match.params.id === '4'\r\n            ? 'tempOut'\r\n            : 'temp';\r\n    };\r\n\r\n    render() {\r\n        if (this.props.today) {\r\n            return (\r\n                <ChartModal\r\n                    data={[\r\n                        ...prepareRechartData(\r\n                            this.props.yesterday[getSensorName(this.props.match.params.id)],\r\n                            getSensorName(this.props.match.params.id),\r\n                            isOldData(this.props.today.date),\r\n                        ),\r\n                        ...prepareRechartData(\r\n                            this.props.today[getSensorName(this.props.match.params.id)],\r\n                            getSensorName(this.props.match.params.id),\r\n                            isOldData(this.props.today.date),\r\n                        ),\r\n                    ]}\r\n                    type={this.getChartType()}\r\n                    actions={this.renderActions()}\r\n                    onDismiss={() => this.props.history.push('/')}\r\n                />\r\n            );\r\n        } else {\r\n            return (\r\n                <ChartModal\r\n                    xData={null}\r\n                    yData={null}\r\n                    type={this.props.match.path === '/chart/temp/:id' ? 'temp' : 'hum'}\r\n                    actions={this.renderActions()}\r\n                    onDismiss={() => this.props.history.push('/')}\r\n                />\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst getSensorName = (id) => {\r\n    switch (id) {\r\n        case '1':\r\n            return 'sensor01';\r\n        case '2':\r\n            return 'sensor02';\r\n        case '3':\r\n            return 'sensor03';\r\n        case '4':\r\n            return 'sensor03';\r\n        case '5':\r\n            return 'sensor04';\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        today: state.data.today,\r\n        yesterday: state.data.yesterday,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchToday })(ShowChart);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport { fetchName, fetchToday } from '../actions';\r\nimport './App.css';\r\nimport FooterMenu from './footer-menu/FooterMenu';\r\nimport Header from './Header';\r\nimport HistoryComponent from './history-component/HistoryComponent';\r\nimport SensorsList from './sensors-list/SensorsList';\r\nimport Settings from './Settings';\r\nimport ShowChart from './ShowChart';\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchToday();\r\n        this.props.fetchName();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HashRouter>\r\n                    <Header />\r\n                    <Route path=\"/\" exact component={SensorsList} />\r\n                    <Route path=\"/chart/temp/:id\" exact component={ShowChart} />\r\n                    <Route path=\"/chart/hum/:id\" exact component={ShowChart} />\r\n                    <Route path=\"/settings\" exact component={Settings} />\r\n                    <Route path=\"/history\" exact component={HistoryComponent} />\r\n                    <FooterMenu />\r\n                </HashRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        sensor01: state.data.sensor01,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchToday, fetchName })(App);\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport fetchCovidReducer from './fetchCovidReducer';\r\nimport fetchDayByDateReducer from './fetchDayByDateReducer';\r\nimport fetchDayReducer from './fetchDayReducer';\r\nimport pathReducer from './pathReducer';\r\nimport sensorNamesReducer from './sensorNamesReducer';\r\n\r\nexport default combineReducers({\r\n    data: fetchDayReducer,\r\n    covid: fetchCovidReducer,\r\n    form: formReducer,\r\n    names: sensorNamesReducer,\r\n    day: fetchDayByDateReducer,\r\n    path: pathReducer,\r\n});\r\n","import { FETCH_TODAY } from '../actions/types';\r\n\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_TODAY:\r\n            return { ...state,  ...action.payload }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n","import { FETCH_COVID, FETCH_COVID_PL } from '../actions/types';\r\n\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_COVID:\r\n            return { ...state,  world: action.payload };\r\n        case FETCH_COVID_PL:\r\n            return { ...state, poland: action.payload };\r\n        default:\r\n            return state;\r\n    };\r\n};","import { FETCH_NAME, POST_NAME } from '../actions/types';\r\n\r\n\r\n\r\nexport default (state={}, action) => {\r\n    switch(action.type) {\r\n        case FETCH_NAME:\r\n            return { ...state,  ...action.payload };\r\n        case POST_NAME:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    };\r\n};","import { FETCH_DAY_BY_DATE } from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case FETCH_DAY_BY_DATE:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { CURRENT_PATH } from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case CURRENT_PATH:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as dotenv from 'dotenv';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\ndotenv.config();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root'),\r\n);\r\n"],"sourceRoot":""}